initSidebarItems({"macro":[["chain","A macro for creating a chain of expressions."],["loc",""],["local_key","A macro to create a `LocalKey<T>`."],["path","A macro for generating the code that creates a [`Path`] from the provided tokens."]],"mod":[["app","Components for constructing HTTP applications."],["endpoint","Definition of `Endpoint`."],["error","Error representation during handling the request."],["extractor","Definition of `Extractor` and its implementors."],["fs","The basic components for serving static files."],["future","Compatible layer of asynchronous tasks used within the framework."],["handler","Definition of `Handler`."],["input","Components for accessing the incoming request data."],["output","Components for constructing HTTP responses."],["server","The implementation of HTTP server for tsukuyomi."],["test","Experimental testing utility."],["upgrade","Abstraction of HTTP upgrade in Tsukuyomi."],["util","Miscellaneous components used within the framework."],["vendor","Re-export of crates used within the framework and frequently used on the user side."]],"struct":[["App","The main type representing an HTTP application."],["Error","A type that contains arbitrary HTTP error values."],["Input","A proxy object for accessing the incoming HTTP request data."]],"trait":[["Endpoint","A trait representing the process to be performed when a route matches."],["Extractor","A trait abstracting the extraction of values from the incoming request."],["Handler","A trait representing the handler associated with the specified endpoint."],["HttpError","A trait representing error values to be converted into an HTTP response."],["IntoResponse","A trait representing the conversion into an HTTP response."],["ModifyHandler","A trait representing a type for modifying the instance of `Handler`."],["Responder","A trait that abstracts the \"reply\" to the client."]],"type":[["Result","A type alias of `Result<T, E>` with `error::Error` as error type."]]});