var N = null;var searchIndex = {};
searchIndex["askama"]={"doc":"Askama implements a type-safe compiler for Jinja-like…","items":[[0,"filters","askama","Module for built-in filter functions",N,N],[17,"BUILT_IN_FILTERS","askama::filters","",N,N],[5,"safe","","Marks a string (or other `Display` type) as safe",N,[[["i"]],["result",["markupdisplay","error"]]]],[5,"escape","","Escapes `&`, `<` and `>` in strings",N,[[["i"]],["result",["markupdisplay","error"]]]],[5,"e","","Alias for the `escape()` filter",N,[[["i"]],["result",["markupdisplay","error"]]]],[5,"format","","Formats arguments according to the specified format",N,N],[5,"linebreaks","","Replaces line breaks in plain text with appropriate HTML",N,[[["display"]],["result",["string","error"]]]],[5,"linebreaksbr","","Converts all newlines in a piece of plain text to HTML…",N,[[["display"]],["result",["string","error"]]]],[5,"lower","","Converts to lowercase",N,[[["display"]],["result",["string","error"]]]],[5,"lowercase","","Alias for the `lower()` filter",N,[[["display"]],["result",["string","error"]]]],[5,"upper","","Converts to uppercase",N,[[["display"]],["result",["string","error"]]]],[5,"uppercase","","Alias for the `upper()` filter",N,[[["display"]],["result",["string","error"]]]],[5,"trim","","Strip leading and trailing whitespace",N,[[["display"]],["result",["string","error"]]]],[5,"truncate","","Limit string length, appends '...' if truncated",N,[[["display"],["usize"]],["result",["string","error"]]]],[5,"join","","Joins iterable into a string separated by provided argument",N,[[["i"],["s"]],["result",["string","error"]]]],[5,"abs","","Absolute value",N,[[["t"]],["result",["error"]]]],[5,"capitalize","","Capitalize a value. The first character will be uppercase,…",N,[[["display"]],["result",["string","error"]]]],[5,"center","","Centers the value in a field of a given width",N,[[["display"],["usize"]],["result",["string","error"]]]],[5,"wordcount","","Count the words in that string",N,[[["display"]],["result",["usize","error"]]]],[5,"read_config_file","askama","",N,[[],["string"]]],[4,"Error","","askama error type",N,N],[13,"Fmt","","formatting error",0,N],[4,"MarkupDisplay","","",N,N],[13,"Safe","","",1,N],[13,"Unsafe","","",1,N],[6,"Result","","",N,N],[5,"rerun_if_templates_changed","","Build script helper to rebuild crates if contained…",N,[[]]],[8,"Template","","Main `Template` trait; implementations are generally derived",N,N],[11,"render","","Helper method which allocates a new `String` and renders…",2,[[["self"]],["result",["string"]]]],[10,"render_into","","Renders the template to the given `writer` buffer",2,[[["self"],["write"]],["result"]]],[10,"extension","","Helper method to inspect the template's extension",2,[[["self"]],["option",["str"]]]],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"to_string","","",1,[[["self"]],["string"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["markupdisplay"]]],[11,"from","","",0,[[["error"]],["error"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result",["error"]]]],[11,"eq","","",1,[[["self"],["markupdisplay"]],["bool"]]],[11,"ne","","",1,[[["self"],["markupdisplay"]],["bool"]]],[11,"description","","",0,[[["self"]],["str"]]],[11,"cause","","",0,[[["self"]],["option",["error"]]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result",["error"]]]],[11,"mark_safe","","",1,[[["self"]],["markupdisplay"]]],[11,"unsafe_string","","",1,[[["self"]],["string"]]]],"paths":[[4,"Error"],[4,"MarkupDisplay"],[8,"Template"]]};
searchIndex["juniper"]={"doc":"GraphQL","items":[[3,"LookAheadArgument","juniper","An argument passed into the query",N,N],[3,"LookAheadSelection","","A selection performed by a query",N,N],[3,"ExecutionError","","Error type for errors that occur during query execution",N,N],[3,"Executor","","Query execution engine",N,N],[3,"FieldError","","Error type for errors that occur during field resolution",N,N],[3,"Registry","","A type registry used to build schemas",N,N],[12,"types","","Currently registered types",0,N],[3,"RootNode","","Root query node of a schema",N,N],[3,"Arguments","","Field argument container",N,N],[3,"EmptyMutation","","Util\u007fity type to define read-only schemas",N,N],[3,"ID","","An ID as defined by the GraphQL specification",N,N],[3,"RuleError","","Query validation error",N,N],[3,"Object","","A Object value",N,N],[4,"InputValue","","A JSON-like value that can be passed into the query…",N,N],[13,"Null","","",1,N],[13,"Scalar","","",1,N],[13,"Enum","","",1,N],[13,"Variable","","",1,N],[13,"List","","",1,N],[13,"Object","","",1,N],[4,"Selection","","Entry in a GraphQL selection set",N,N],[13,"Field","","",2,N],[13,"FragmentSpread","","",2,N],[13,"InlineFragment","","",2,N],[4,"Type","","A type literal in the syntax tree",N,N],[13,"Named","","A nullable named type, e.g. `String`",3,N],[13,"List","","A nullable list type, e.g. `[String]`",3,N],[13,"NonNullNamed","","A non-null named type, e.g. `String!`",3,N],[13,"NonNullList","","A non-null list type, e.g. `[String]!`.",3,N],[4,"Applies","","An enum that describes if a field is available in all…",N,N],[13,"All","","The field is available independent from the type",4,N],[13,"OnlyType","","The field is only available for a given typename",4,N],[4,"LookAheadValue","","A JSON-like value that can is used as argument in the…",N,N],[13,"Null","","",5,N],[13,"Scalar","","",5,N],[13,"Enum","","",5,N],[13,"List","","",5,N],[13,"Object","","",5,N],[4,"TypeKind","","GraphQL type kind",N,N],[13,"Scalar","","Scalar types",6,N],[13,"Object","","Object types",6,N],[13,"Interface","","Interface types",6,N],[13,"Union","","Union types",6,N],[13,"Enum","","Enum types",6,N],[13,"InputObject","","Input objects",6,N],[13,"List","","List types",6,N],[13,"NonNull","","Non-null types",6,N],[4,"DefaultScalarValue","","The default scalar value representation in juniper",N,N],[13,"Int","","",7,N],[13,"Float","","",7,N],[13,"String","","",7,N],[13,"Boolean","","",7,N],[4,"Value","","Serializable value returned from query and field execution.",N,N],[13,"Null","","",8,N],[13,"Scalar","","",8,N],[13,"List","","",8,N],[13,"Object","","",8,N],[4,"GraphQLError","","An error that prevented query execution",N,N],[13,"ParseError","","",9,N],[13,"ValidationError","","",9,N],[13,"NoOperationProvided","","",9,N],[13,"MultipleOperationsProvided","","",9,N],[13,"UnknownOperationName","","",9,N],[5,"execute","","Execute a query in a provided schema",N,[[["str"],["option",["str"]],["rootnode"],["variables"],["ctxt"]],["result",["graphqlerror"]]]],[11,"with_capacity","","Create a new Object value with a fixed number of…",10,[[["usize"]],["self"]]],[11,"add_field","","Add a new field with a value",10,[[["self"],["k"],["value"]],["option",["value"]]]],[11,"contains_field","","Check if the object already contains a field with the…",10,[[["self"],["k"]],["bool"]]],[11,"iter","","Get a iterator over all field value pairs",10,[[["self"]],["fielditer"]]],[11,"iter_mut","","Get a iterator over all mutable field value pairs",10,[[["self"]],["fielditermut"]]],[11,"field_count","","Get the current number of fields",10,[[["self"]],["usize"]]],[11,"get_field_value","","Get the value for a given field",10,[[["self"],["k"]],["option",["value"]]]],[11,"null","","Construct a null value.",8,[[],["self"]]],[11,"int","","Construct an integer value.",8,[[["i32"]],["self"]]],[11,"float","","Construct a floating point value.",8,[[["f64"]],["self"]]],[11,"string","","Construct a string value.",8,[[["str"]],["self"]]],[11,"boolean","","Construct a boolean value.",8,[[["bool"]],["self"]]],[11,"list","","Construct a list value.",8,[[["vec"]],["self"]]],[11,"object","","Construct an object value.",8,[[["object"]],["self"]]],[11,"scalar","","Construct a scalar value",8,[[["t"]],["self"]]],[11,"is_null","","Does this value represent null?",8,[[["self"]],["bool"]]],[11,"as_scalar_value","","View the underlying scalar value if present",8,[[["self"]],["option"]]],[11,"as_float_value","","View the underlying float value, if present.",8,[[["self"]],["option",["f64"]]]],[11,"as_object_value","","View the underlying object value, if present.",8,[[["self"]],["option",["object"]]]],[11,"as_mut_object_value","","Mutable view into the underlying object value, if present.",8,[[["self"]],["option",["object"]]]],[11,"as_list_value","","View the underlying list value, if present.",8,[[["self"]],["option",["vec"]]]],[11,"as_scalar","","View the underlying scalar value, if present",8,[[["self"]],["option"]]],[11,"as_string_value","","View the underlying string value, if present.",8,[[["self"]],["option",["str"]]]],[11,"name","","Get the name of a named type.",3,[[["self"]],["option",["str"]]]],[11,"innermost_name","","Get the innermost name by unpacking lists",3,[[["self"]],["str"]]],[11,"is_non_null","","Determines if a type only can represent non-null values.",3,[[["self"]],["bool"]]],[11,"null","","Construct a null value.",1,[[],["self"]]],[11,"int","","Construct an integer value.",1,[[["i32"]],["self"]]],[11,"float","","Construct a floating point value.",1,[[["f64"]],["self"]]],[11,"boolean","","Construct a boolean value.",1,[[["bool"]],["self"]]],[11,"string","","Construct a string value.",1,[[["t"]],["self"]]],[11,"scalar","","Construct a scalar value",1,[[["t"]],["self"]]],[11,"enum_value","","Construct an enum value.",1,[[["t"]],["self"]]],[11,"variable","","Construct a variable value.",1,[[["t"]],["self"]]],[11,"list","","Construct an unlocated list.",1,[[["vec"]],["self"]]],[11,"parsed_list","","Construct a located list.",1,[[["vec",["spanning"]]],["self"]]],[11,"object","","Construct an unlocated object.",1,[[["indexmap"]],["self"]]],[11,"parsed_object","","Construct a located object.",1,[[["vec"]],["self"]]],[11,"into_const","","Resolve all variables to their values.",1,[[["self"],["variables"]],["self"]]],[11,"convert","","Shorthand form of invoking `FromInputValue::from()`.",1,[[["self"]],["option"]]],[11,"is_null","","Does the value represent null?",1,[[["self"]],["bool"]]],[11,"is_variable","","Does the value represent a variable?",1,[[["self"]],["bool"]]],[11,"as_enum_value","","View the underlying enum value, if present.",1,[[["self"]],["option",["str"]]]],[11,"as_int_value","","View the underlying int value, if present.",1,[[["self"]],["option",["i32"]]]],[11,"as_float_value","","View the underlying float value, if present.",1,[[["self"]],["option",["f64"]]]],[11,"as_string_value","","View the underlying string value, if present.",1,[[["self"]],["option",["str"]]]],[11,"as_scalar","","View the underlying scalar value, if present.",1,[[["self"]],["option"]]],[11,"as_scalar_value","","View the underlying scalar value, if present.",1,[[["self"]],["option"]]],[11,"to_object_value","","Convert the input value to an unlocated object value.",1,[[["self"]],["option",["indexmap"]]]],[11,"to_list_value","","Convert the input value to an unlocated list value.",1,[[["self"]],["option",["vec"]]]],[11,"referenced_variables","","Recursively find all variables",1,[[["self"]],["vec",["str"]]]],[11,"unlocated_eq","","Compare equality with another `InputValue` ignoring any…",1,[[["self"],["self"]],["bool"]]],[11,"value","","The value of the argument",11,[[["self"]],["lookaheadvalue"]]],[11,"for_explicit_type","","Convert a eventually type independent selection into one…",12,[[["self"],["str"]],["concretelookaheadselection"]]],[11,"at_origin","","Construct a new execution error occuring at the beginning…",13,[[["fielderror"]],["executionerror"]]],[11,"new","","Construct a new error with additional data",14,[[["t"],["value"]],["fielderror"]]],[11,"resolve_with_ctx","","Resolve a single arbitrary value, mapping the context to a…",15,N],[11,"resolve","","Resolve a single arbitrary value into an `ExecutionResult`",15,N],[11,"resolve_into_value","","Resolve a single arbitrary value into a return value",15,N],[11,"replaced_context","","Derive a new executor by replacing the context",15,[[["self"],["newctxt"]],["executor"]]],[11,"context","","Access the current context",15,[[["self"]],["ctxt"]]],[11,"schema","","The currently executing schema",15,[[["self"]],["schematype"]]],[11,"location","","The current location of the executor",15,[[["self"]],["sourceposition"]]],[11,"push_error","","Add an error to the execution engine at the current…",15,[[["self"],["fielderror"]]]],[11,"push_error_at","","Add an error to the execution engine at a specific location",15,[[["self"],["fielderror"],["sourceposition"]]]],[11,"look_ahead","","Construct a lookahead selection for the current selection",15,[[["self"]],["lookaheadselection"]]],[11,"error","","The error message",13,[[["self"]],["fielderror"]]],[11,"location","","The source location in the query of the field that failed…",13,[[["self"]],["sourceposition"]]],[11,"path","","The path of fields leading to the field that generated…",13,N],[11,"new","","Construct a new registry",0,[[["fnvhashmap",["name","metatype"]]],["registry"]]],[11,"get_type","","Get the `Type` instance for a given GraphQL type",0,N],[11,"field","","Create a field with the provided name",0,N],[11,"arg","","Create an argument with the provided name",0,N],[11,"arg_with_default","","Create an argument with a default value",0,N],[11,"build_scalar_type","","Create a scalar meta type",0,N],[11,"build_list_type","","Create a list meta type",0,N],[11,"build_nullable_type","","Create a nullable meta type",0,N],[11,"build_object_type","","Create an object meta type builder",0,N],[11,"build_enum_type","","Create an enum meta type",0,N],[11,"build_interface_type","","Create an interface meta type builder, by providing a type…",0,N],[11,"build_union_type","","Create a union meta type builder",0,N],[11,"build_input_object_type","","Create an input object meta type builder",0,N],[0,"parser","","Query parser and language utilities",N,N],[3,"SourcePosition","juniper::parser","A reference to a line and column in an input source file",N,N],[3,"Spanning","","Data structure used to wrap items with start and end…",N,N],[12,"item","","The wrapped item",16,N],[12,"start","","Start position of the item",16,N],[12,"end","","End position of the item",16,N],[4,"LexerError","","Error when tokenizing the input source",N,N],[13,"UnknownCharacter","","An unknown character was found",17,N],[13,"UnexpectedCharacter","","An unexpected character was found",17,N],[13,"UnterminatedString","","An unterminated string literal was found",17,N],[13,"UnknownCharacterInString","","An unknown character in a string literal was found",17,N],[13,"UnknownEscapeSequence","","An unknown escape sequence in a string literal was found",17,N],[13,"UnexpectedEndOfFile","","The input source was unexpectedly terminated",17,N],[13,"InvalidNumber","","An invalid number literal was found",17,N],[4,"Token","","A single token in the input source",N,N],[13,"Name","","",18,N],[13,"Scalar","","",18,N],[13,"ExclamationMark","","",18,N],[13,"Dollar","","",18,N],[13,"ParenOpen","","",18,N],[13,"ParenClose","","",18,N],[13,"BracketOpen","","",18,N],[13,"BracketClose","","",18,N],[13,"CurlyOpen","","",18,N],[13,"CurlyClose","","",18,N],[13,"Ellipsis","","",18,N],[13,"Colon","","",18,N],[13,"Equals","","",18,N],[13,"At","","",18,N],[13,"Pipe","","",18,N],[13,"EndOfFile","","",18,N],[4,"ScalarToken","","A single scalar value literal",N,N],[13,"String","","",19,N],[13,"Float","","",19,N],[13,"Int","","",19,N],[4,"ParseError","","Error while parsing a GraphQL query",N,N],[13,"UnexpectedToken","","An unexpected token occurred in the source",20,N],[13,"UnexpectedEndOfFile","","The input source abruptly ended",20,N],[13,"LexerError","","An error during tokenization occurred",20,N],[11,"map","","Modify the contents of the spanned item",16,[[["self"],["f"]],["spanning"]]],[11,"index","","The index of the character in the input source",21,[[["self"]],["usize"]]],[11,"line","","The line of the character in the input source",21,[[["self"]],["usize"]]],[11,"column","","The column of the character in the input source",21,[[["self"]],["usize"]]],[11,"new","juniper","Construct a new root node from query and mutation nodes",22,[[["queryt"],["mutationt"]],["self"]]],[11,"new_with_info","","Construct a new root node from query and mutation nodes,…",22,N],[11,"get","","Get and convert an argument into the desired type.",23,[[["self"],["str"]],["option"]]],[11,"new","","Construct a new ID from anything implementing `Into<String>`",24,[[["s"]],["self"]]],[11,"new","","Construct a new empty mutation",25,[[],["emptymutation"]]],[11,"message","","Access the message for a validation error",26,[[["self"]],["str"]]],[11,"locations","","Access the positions of the validation error",26,N],[0,"http","","Utilities for building HTTP endpoints in a…",N,N],[3,"GraphQLRequest","juniper::http","The expected structure of the decoded JSON document for…",N,N],[3,"GraphQLResponse","","Simple wrapper around the result from executing a GraphQL…",N,N],[0,"graphiql","","Utility module to generate a GraphiQL interface",N,N],[5,"graphiql_source","juniper::http::graphiql","Generate the HTML source to show a GraphiQL interface",N,[[["str"]],["string"]]],[11,"new","juniper::http","Construct a new GraphQL request from parts",27,[[["string"],["option",["string"]],["option",["inputvalue"]]],["self"]]],[11,"execute","","Execute a GraphQL request using the specified schema and…",27,[[["self"],["rootnode"],["ctxt"]],["graphqlresponse"]]],[11,"error","","Constructs an error response outside of the normal…",28,[[["fielderror"]],["self"]]],[11,"is_ok","","Was the request successful or not?",28,[[["self"]],["bool"]]],[0,"integrations","juniper","Provides GraphQLType implementations for some external types",N,N],[0,"chrono","juniper::integrations","GraphQL support for chrono types. # Supported types",N,N],[0,"url","","GraphQL support for url types.",N,N],[0,"uuid","","GraphQL support for uuid types.",N,N],[0,"meta","juniper","Types used to describe a `GraphQL` schema",N,N],[3,"ScalarMeta","juniper::meta","Scalar type metadata",N,N],[3,"ListMeta","","List type metadata",N,N],[3,"NullableMeta","","Nullable type metadata",N,N],[3,"ObjectMeta","","Object type metadata",N,N],[3,"EnumMeta","","Enum type metadata",N,N],[3,"InterfaceMeta","","Interface type metadata",N,N],[3,"UnionMeta","","Union type metadata",N,N],[3,"InputObjectMeta","","Input object metadata",N,N],[3,"PlaceholderMeta","","A placeholder for not-yet-registered types",N,N],[3,"Field","","Metadata for a field",N,N],[3,"Argument","","Metadata for an argument to a field",N,N],[3,"EnumValue","","Metadata for a single value in an enum",N,N],[12,"name","","The name of the enum value",29,N],[12,"description","","The optional description of the enum value.",29,N],[12,"deprecation_status","","Whether the field is deprecated or not, with an optional…",29,N],[4,"DeprecationStatus","","Whether an item is deprecated, with context.",N,N],[13,"Current","","The field/variant is not deprecated.",30,N],[13,"Deprecated","","The field/variant is deprecated, with an optional reason",30,N],[4,"MetaType","","Generic type metadata",N,N],[6,"ExecutionResult","juniper","The result of resolving an unspecified field",N,N],[6,"FieldResult","","The result of resolving the value of a field of type `T`",N,N],[6,"Variables","","The map of variables used for substitution during query…",N,N],[6,"ParseScalarResult","","The result of converting a string into a scalar value",N,N],[8,"FromInputValue","","Parse an unstructured input value into a Rust data type.",N,N],[10,"from_input_value","","Performs the conversion.",31,[[["inputvalue"]],["option"]]],[8,"ToInputValue","","Losslessly clones a Rust data type into an InputValue.",N,N],[10,"to_input_value","","Performs the conversion.",32,[[["self"]],["inputvalue"]]],[8,"LookAheadMethods","","A set of common methods for `ConcreteLookAheadSelection`…",N,N],[10,"field_name","","Get the name of the field represented by the current…",33,[[["self"]],["str"]]],[10,"select_child","","Get the the child selection for a given field",33,[[["self"],["str"]],["option"]]],[11,"has_child","","Check if a given field exists",33,[[["self"],["str"]],["bool"]]],[10,"arguments","","Get the top level arguments for the current selection",33,N],[11,"argument","","Get the top level argument with a given name from the…",33,[[["self"],["str"]],["option",["lookaheadargument"]]]],[8,"Context","","Marker trait for types that can act as context objects for…",N,N],[8,"FromContext","","Conversion trait for context types",N,N],[10,"from","","Perform the conversion",34,[[["t"]],["self"]]],[8,"IntoFieldError","","Custom error handling trait to enable Error types other…",N,N],[8,"GraphQLType","","Primary trait used to expose Rust types in a GraphQL schema",N,N],[16,"Context","","The expected context type for this GraphQL type",35,N],[16,"TypeInfo","","Type that may carry additional schema information",35,N],[10,"name","","The name of the GraphQL type to expose.",35,N],[10,"meta","","The meta type representing this GraphQL type.",35,N],[11,"resolve_field","","Resolve the value of a single field on this type.",35,N],[11,"resolve_into_type","","Resolve this interface or union into a concrete type",35,N],[11,"concrete_type_name","","Return the concrete type name for this instance/union.",35,N],[11,"resolve","","Resolve the provided selection set against the current…",35,N],[8,"ParseScalarValue","","A trait used to convert a `ScalarToken` into a certain…",N,N],[10,"from_str","","See the trait documentation",36,[[["scalartoken"]],["parsescalarresult"]]],[8,"ScalarRefValue","","A marker trait extending the `ScalarValue` trait",N,N],[8,"ScalarValue","","A trait marking a type that could be used as internal…",N,N],[16,"Visitor","","Serde visitor used to deserialize this scalar value",37,N],[11,"is_type","","Checks if the current value contains the a value of the…",37,[[["self"]],["bool"]]],[10,"as_int","","Convert the given scalar value into an integer value",37,[[["self"]],["option",["i32"]]]],[10,"as_string","","Convert the given scalar value into a string value",37,[[["self"]],["option",["string"]]]],[10,"as_float","","Convert the given scalar value into a float value",37,[[["self"]],["option",["f64"]]]],[10,"as_boolean","","Convert the given scalar value into a boolean value",37,[[["self"]],["option",["bool"]]]],[14,"graphql_value","","Construct JSON-like values by using JSON syntax",N,N],[14,"graphql_object","","Expose GraphQL objects",N,N],[14,"graphql_interface","","Expose GraphQL interfaces",N,N],[14,"graphql_scalar","","Expose GraphQL scalars",N,N],[14,"graphql_union","","Expose GraphQL unions",N,N],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[["self"]],["u"]]],[11,"to_owned","","",11,[[["self"]],["t"]]],[11,"clone_into","","",11,N],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"try_into","","",11,[[["self"]],["result"]]],[11,"get_type_id","","",11,[[["self"]],["typeid"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"into","","",12,[[["self"]],["u"]]],[11,"to_owned","","",12,[[["self"]],["t"]]],[11,"clone_into","","",12,N],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"try_into","","",12,[[["self"]],["result"]]],[11,"get_type_id","","",12,[[["self"]],["typeid"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"into","","",13,[[["self"]],["u"]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"try_into","","",13,[[["self"]],["result"]]],[11,"get_type_id","","",13,[[["self"]],["typeid"]]],[11,"equivalent","","",13,[[["self"],["k"]],["bool"]]],[11,"from","","",15,[[["t"]],["t"]]],[11,"into","","",15,[[["self"]],["u"]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"try_into","","",15,[[["self"]],["result"]]],[11,"get_type_id","","",15,[[["self"]],["typeid"]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"into","","",14,[[["self"]],["u"]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"try_into","","",14,[[["self"]],["result"]]],[11,"get_type_id","","",14,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",22,[[["t"]],["t"]]],[11,"into","","",22,[[["self"]],["u"]]],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"try_into","","",22,[[["self"]],["result"]]],[11,"get_type_id","","",22,[[["self"]],["typeid"]]],[11,"from","","",23,[[["t"]],["t"]]],[11,"into","","",23,[[["self"]],["u"]]],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"try_into","","",23,[[["self"]],["result"]]],[11,"get_type_id","","",23,[[["self"]],["typeid"]]],[11,"from","","",25,[[["t"]],["t"]]],[11,"into","","",25,[[["self"]],["u"]]],[11,"try_from","","",25,[[["u"]],["result"]]],[11,"borrow","","",25,[[["self"]],["t"]]],[11,"borrow_mut","","",25,[[["self"]],["t"]]],[11,"try_into","","",25,[[["self"]],["result"]]],[11,"get_type_id","","",25,[[["self"]],["typeid"]]],[11,"from","","",24,[[["t"]],["t"]]],[11,"into","","",24,[[["self"]],["u"]]],[11,"to_owned","","",24,[[["self"]],["t"]]],[11,"clone_into","","",24,N],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"try_into","","",24,[[["self"]],["result"]]],[11,"get_type_id","","",24,[[["self"]],["typeid"]]],[11,"equivalent","","",24,[[["self"],["k"]],["bool"]]],[11,"from","","",26,[[["t"]],["t"]]],[11,"into","","",26,[[["self"]],["u"]]],[11,"try_from","","",26,[[["u"]],["result"]]],[11,"borrow","","",26,[[["self"]],["t"]]],[11,"borrow_mut","","",26,[[["self"]],["t"]]],[11,"try_into","","",26,[[["self"]],["result"]]],[11,"get_type_id","","",26,[[["self"]],["typeid"]]],[11,"equivalent","","",26,[[["self"],["k"]],["bool"]]],[11,"into_iter","","",10,[[["self"]],["i"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[["self"]],["u"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,N],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"try_into","","",10,[[["self"]],["result"]]],[11,"get_type_id","","",10,[[["self"]],["typeid"]]],[11,"to_string","","",1,[[["self"]],["string"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,N],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"to_string","","",3,[[["self"]],["string"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,N],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"equivalent","","",3,[[["self"],["k"]],["bool"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,N],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,N],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,N],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"equivalent","","",6,[[["self"],["k"]],["bool"]]],[11,"to_string","","",7,[[["self"]],["string"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[["self"]],["u"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,N],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[["self"]],["u"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,N],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"try_into","","",8,[[["self"]],["result"]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[["self"]],["u"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"try_into","","",9,[[["self"]],["result"]]],[11,"get_type_id","","",9,[[["self"]],["typeid"]]],[11,"from","juniper::parser","",21,[[["t"]],["t"]]],[11,"into","","",21,[[["self"]],["u"]]],[11,"to_owned","","",21,[[["self"]],["t"]]],[11,"clone_into","","",21,N],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"try_into","","",21,[[["self"]],["result"]]],[11,"get_type_id","","",21,[[["self"]],["typeid"]]],[11,"equivalent","","",21,[[["self"],["k"]],["bool"]]],[11,"from","","",16,[[["t"]],["t"]]],[11,"into","","",16,[[["self"]],["u"]]],[11,"to_owned","","",16,[[["self"]],["t"]]],[11,"clone_into","","",16,N],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"try_into","","",16,[[["self"]],["result"]]],[11,"get_type_id","","",16,[[["self"]],["typeid"]]],[11,"equivalent","","",16,[[["self"],["k"]],["bool"]]],[11,"to_string","","",17,[[["self"]],["string"]]],[11,"from","","",17,[[["t"]],["t"]]],[11,"into","","",17,[[["self"]],["u"]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"try_into","","",17,[[["self"]],["result"]]],[11,"get_type_id","","",17,[[["self"]],["typeid"]]],[11,"equivalent","","",17,[[["self"],["k"]],["bool"]]],[11,"to_string","","",18,[[["self"]],["string"]]],[11,"from","","",18,[[["t"]],["t"]]],[11,"into","","",18,[[["self"]],["u"]]],[11,"to_owned","","",18,[[["self"]],["t"]]],[11,"clone_into","","",18,N],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"try_into","","",18,[[["self"]],["result"]]],[11,"get_type_id","","",18,[[["self"]],["typeid"]]],[11,"from","","",19,[[["t"]],["t"]]],[11,"into","","",19,[[["self"]],["u"]]],[11,"to_owned","","",19,[[["self"]],["t"]]],[11,"clone_into","","",19,N],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"try_into","","",19,[[["self"]],["result"]]],[11,"get_type_id","","",19,[[["self"]],["typeid"]]],[11,"to_string","","",20,[[["self"]],["string"]]],[11,"from","","",20,[[["t"]],["t"]]],[11,"into","","",20,[[["self"]],["u"]]],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"try_into","","",20,[[["self"]],["result"]]],[11,"get_type_id","","",20,[[["self"]],["typeid"]]],[11,"from","juniper::meta","",38,[[["t"]],["t"]]],[11,"into","","",38,[[["self"]],["u"]]],[11,"try_from","","",38,[[["u"]],["result"]]],[11,"borrow","","",38,[[["self"]],["t"]]],[11,"borrow_mut","","",38,[[["self"]],["t"]]],[11,"try_into","","",38,[[["self"]],["result"]]],[11,"get_type_id","","",38,[[["self"]],["typeid"]]],[11,"from","","",39,[[["t"]],["t"]]],[11,"into","","",39,[[["self"]],["u"]]],[11,"try_from","","",39,[[["u"]],["result"]]],[11,"borrow","","",39,[[["self"]],["t"]]],[11,"borrow_mut","","",39,[[["self"]],["t"]]],[11,"try_into","","",39,[[["self"]],["result"]]],[11,"get_type_id","","",39,[[["self"]],["typeid"]]],[11,"from","","",40,[[["t"]],["t"]]],[11,"into","","",40,[[["self"]],["u"]]],[11,"try_from","","",40,[[["u"]],["result"]]],[11,"borrow","","",40,[[["self"]],["t"]]],[11,"borrow_mut","","",40,[[["self"]],["t"]]],[11,"try_into","","",40,[[["self"]],["result"]]],[11,"get_type_id","","",40,[[["self"]],["typeid"]]],[11,"from","","",41,[[["t"]],["t"]]],[11,"into","","",41,[[["self"]],["u"]]],[11,"try_from","","",41,[[["u"]],["result"]]],[11,"borrow","","",41,[[["self"]],["t"]]],[11,"borrow_mut","","",41,[[["self"]],["t"]]],[11,"try_into","","",41,[[["self"]],["result"]]],[11,"get_type_id","","",41,[[["self"]],["typeid"]]],[11,"from","","",42,[[["t"]],["t"]]],[11,"into","","",42,[[["self"]],["u"]]],[11,"try_from","","",42,[[["u"]],["result"]]],[11,"borrow","","",42,[[["self"]],["t"]]],[11,"borrow_mut","","",42,[[["self"]],["t"]]],[11,"try_into","","",42,[[["self"]],["result"]]],[11,"get_type_id","","",42,[[["self"]],["typeid"]]],[11,"from","","",43,[[["t"]],["t"]]],[11,"into","","",43,[[["self"]],["u"]]],[11,"try_from","","",43,[[["u"]],["result"]]],[11,"borrow","","",43,[[["self"]],["t"]]],[11,"borrow_mut","","",43,[[["self"]],["t"]]],[11,"try_into","","",43,[[["self"]],["result"]]],[11,"get_type_id","","",43,[[["self"]],["typeid"]]],[11,"from","","",44,[[["t"]],["t"]]],[11,"into","","",44,[[["self"]],["u"]]],[11,"try_from","","",44,[[["u"]],["result"]]],[11,"borrow","","",44,[[["self"]],["t"]]],[11,"borrow_mut","","",44,[[["self"]],["t"]]],[11,"try_into","","",44,[[["self"]],["result"]]],[11,"get_type_id","","",44,[[["self"]],["typeid"]]],[11,"from","","",45,[[["t"]],["t"]]],[11,"into","","",45,[[["self"]],["u"]]],[11,"try_from","","",45,[[["u"]],["result"]]],[11,"borrow","","",45,[[["self"]],["t"]]],[11,"borrow_mut","","",45,[[["self"]],["t"]]],[11,"try_into","","",45,[[["self"]],["result"]]],[11,"get_type_id","","",45,[[["self"]],["typeid"]]],[11,"from","","",46,[[["t"]],["t"]]],[11,"into","","",46,[[["self"]],["u"]]],[11,"try_from","","",46,[[["u"]],["result"]]],[11,"borrow","","",46,[[["self"]],["t"]]],[11,"borrow_mut","","",46,[[["self"]],["t"]]],[11,"try_into","","",46,[[["self"]],["result"]]],[11,"get_type_id","","",46,[[["self"]],["typeid"]]],[11,"from","","",47,[[["t"]],["t"]]],[11,"into","","",47,[[["self"]],["u"]]],[11,"to_owned","","",47,[[["self"]],["t"]]],[11,"clone_into","","",47,N],[11,"try_from","","",47,[[["u"]],["result"]]],[11,"borrow","","",47,[[["self"]],["t"]]],[11,"borrow_mut","","",47,[[["self"]],["t"]]],[11,"try_into","","",47,[[["self"]],["result"]]],[11,"get_type_id","","",47,[[["self"]],["typeid"]]],[11,"from","","",48,[[["t"]],["t"]]],[11,"into","","",48,[[["self"]],["u"]]],[11,"to_owned","","",48,[[["self"]],["t"]]],[11,"clone_into","","",48,N],[11,"try_from","","",48,[[["u"]],["result"]]],[11,"borrow","","",48,[[["self"]],["t"]]],[11,"borrow_mut","","",48,[[["self"]],["t"]]],[11,"try_into","","",48,[[["self"]],["result"]]],[11,"get_type_id","","",48,[[["self"]],["typeid"]]],[11,"from","","",29,[[["t"]],["t"]]],[11,"into","","",29,[[["self"]],["u"]]],[11,"to_owned","","",29,[[["self"]],["t"]]],[11,"clone_into","","",29,N],[11,"try_from","","",29,[[["u"]],["result"]]],[11,"borrow","","",29,[[["self"]],["t"]]],[11,"borrow_mut","","",29,[[["self"]],["t"]]],[11,"try_into","","",29,[[["self"]],["result"]]],[11,"get_type_id","","",29,[[["self"]],["typeid"]]],[11,"from","","",30,[[["t"]],["t"]]],[11,"into","","",30,[[["self"]],["u"]]],[11,"to_owned","","",30,[[["self"]],["t"]]],[11,"clone_into","","",30,N],[11,"try_from","","",30,[[["u"]],["result"]]],[11,"borrow","","",30,[[["self"]],["t"]]],[11,"borrow_mut","","",30,[[["self"]],["t"]]],[11,"try_into","","",30,[[["self"]],["result"]]],[11,"get_type_id","","",30,[[["self"]],["typeid"]]],[11,"from","","",49,[[["t"]],["t"]]],[11,"into","","",49,[[["self"]],["u"]]],[11,"try_from","","",49,[[["u"]],["result"]]],[11,"borrow","","",49,[[["self"]],["t"]]],[11,"borrow_mut","","",49,[[["self"]],["t"]]],[11,"try_into","","",49,[[["self"]],["result"]]],[11,"get_type_id","","",49,[[["self"]],["typeid"]]],[11,"from","juniper::http","",27,[[["t"]],["t"]]],[11,"into","","",27,[[["self"]],["u"]]],[11,"to_owned","","",27,[[["self"]],["t"]]],[11,"clone_into","","",27,N],[11,"try_from","","",27,[[["u"]],["result"]]],[11,"borrow","","",27,[[["self"]],["t"]]],[11,"borrow_mut","","",27,[[["self"]],["t"]]],[11,"try_into","","",27,[[["self"]],["result"]]],[11,"get_type_id","","",27,[[["self"]],["typeid"]]],[11,"from","","",28,[[["t"]],["t"]]],[11,"into","","",28,[[["self"]],["u"]]],[11,"try_from","","",28,[[["u"]],["result"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"try_into","","",28,[[["self"]],["result"]]],[11,"get_type_id","","",28,[[["self"]],["typeid"]]],[11,"from_str","juniper","",24,[[["scalartoken"]],["parsescalarresult"]]],[11,"as_int","","",7,[[["self"]],["option",["i32"]]]],[11,"as_string","","",7,[[["self"]],["option",["string"]]]],[11,"as_float","","",7,[[["self"]],["option",["f64"]]]],[11,"as_boolean","","",7,[[["self"]],["option",["bool"]]]],[11,"from_input_value","","",6,[[["inputvalue"]],["option",["typekind"]]]],[11,"from_input_value","","",24,[[["inputvalue"]],["option",["id"]]]],[11,"to_input_value","","",8,[[["self"]],["inputvalue"]]],[11,"to_input_value","","",6,[[["self"]],["inputvalue"]]],[11,"to_input_value","","",24,[[["self"]],["inputvalue"]]],[11,"field_name","","",12,[[["self"]],["str"]]],[11,"select_child","","",12,[[["self"],["str"]],["option"]]],[11,"arguments","","",12,N],[11,"into_field_error","","",14,[[["self"]],["fielderror"]]],[11,"name","","",22,N],[11,"meta","","",22,N],[11,"resolve_field","","",22,N],[11,"resolve","","",22,N],[11,"name","juniper::meta","",47,N],[11,"meta","","",47,N],[11,"concrete_type_name","","",47,N],[11,"resolve_field","","",47,N],[11,"name","","",48,N],[11,"meta","","",48,N],[11,"concrete_type_name","","",48,N],[11,"resolve_field","","",48,N],[11,"name","","",29,N],[11,"meta","","",29,N],[11,"concrete_type_name","","",29,N],[11,"resolve_field","","",29,N],[11,"name","juniper","",6,N],[11,"meta","","",6,N],[11,"resolve","","",6,N],[11,"name","","",24,N],[11,"meta","","",24,N],[11,"resolve","","",24,N],[11,"name","","",25,N],[11,"meta","","",25,N],[11,"eq","","",10,[[["self"],["object"]],["bool"]]],[11,"ne","","",10,[[["self"],["object"]],["bool"]]],[11,"eq","","",7,[[["self"],["defaultscalarvalue"]],["bool"]]],[11,"ne","","",7,[[["self"],["defaultscalarvalue"]],["bool"]]],[11,"eq","","",8,[[["self"],["value"]],["bool"]]],[11,"ne","","",8,[[["self"],["value"]],["bool"]]],[11,"eq","","",3,[[["self"],["type"]],["bool"]]],[11,"ne","","",3,[[["self"],["type"]],["bool"]]],[11,"eq","","",1,[[["self"],["inputvalue"]],["bool"]]],[11,"ne","","",1,[[["self"],["inputvalue"]],["bool"]]],[11,"eq","","",2,[[["self"],["selection"]],["bool"]]],[11,"ne","","",2,[[["self"],["selection"]],["bool"]]],[11,"eq","","",4,[[["self"],["applies"]],["bool"]]],[11,"ne","","",4,[[["self"],["applies"]],["bool"]]],[11,"eq","","",5,[[["self"],["lookaheadvalue"]],["bool"]]],[11,"ne","","",5,[[["self"],["lookaheadvalue"]],["bool"]]],[11,"eq","","",11,[[["self"],["lookaheadargument"]],["bool"]]],[11,"ne","","",11,[[["self"],["lookaheadargument"]],["bool"]]],[11,"eq","","",12,[[["self"],["lookaheadselection"]],["bool"]]],[11,"ne","","",12,[[["self"],["lookaheadselection"]],["bool"]]],[11,"eq","","",13,[[["self"],["executionerror"]],["bool"]]],[11,"ne","","",13,[[["self"],["executionerror"]],["bool"]]],[11,"eq","","",14,[[["self"],["fielderror"]],["bool"]]],[11,"ne","","",14,[[["self"],["fielderror"]],["bool"]]],[11,"eq","juniper::parser","",19,[[["self"],["scalartoken"]],["bool"]]],[11,"ne","","",19,[[["self"],["scalartoken"]],["bool"]]],[11,"eq","","",18,[[["self"],["token"]],["bool"]]],[11,"ne","","",18,[[["self"],["token"]],["bool"]]],[11,"eq","","",17,[[["self"],["lexererror"]],["bool"]]],[11,"ne","","",17,[[["self"],["lexererror"]],["bool"]]],[11,"eq","","",20,[[["self"],["parseerror"]],["bool"]]],[11,"ne","","",20,[[["self"],["parseerror"]],["bool"]]],[11,"eq","","",21,[[["self"],["sourceposition"]],["bool"]]],[11,"ne","","",21,[[["self"],["sourceposition"]],["bool"]]],[11,"eq","","",16,[[["self"],["spanning"]],["bool"]]],[11,"ne","","",16,[[["self"],["spanning"]],["bool"]]],[11,"eq","juniper::meta","",30,[[["self"],["deprecationstatus"]],["bool"]]],[11,"ne","","",30,[[["self"],["deprecationstatus"]],["bool"]]],[11,"eq","juniper","",6,[[["self"],["typekind"]],["bool"]]],[11,"eq","","",24,[[["self"],["id"]],["bool"]]],[11,"ne","","",24,[[["self"],["id"]],["bool"]]],[11,"eq","","",26,[[["self"],["ruleerror"]],["bool"]]],[11,"ne","","",26,[[["self"],["ruleerror"]],["bool"]]],[11,"eq","juniper::http","",27,[[["self"],["graphqlrequest"]],["bool"]]],[11,"ne","","",27,[[["self"],["graphqlrequest"]],["bool"]]],[11,"eq","juniper","",9,[[["self"],["graphqlerror"]],["bool"]]],[11,"ne","","",9,[[["self"],["graphqlerror"]],["bool"]]],[11,"into_iter","","",10,N],[11,"cmp","","",13,[[["self"],["executionerror"]],["ordering"]]],[11,"cmp","juniper::parser","",21,[[["self"],["sourceposition"]],["ordering"]]],[11,"cmp","juniper","",26,[[["self"],["ruleerror"]],["ordering"]]],[11,"clone","","",10,[[["self"]],["object"]]],[11,"clone","","",7,[[["self"]],["defaultscalarvalue"]]],[11,"clone","","",8,[[["self"]],["value"]]],[11,"clone","","",3,[[["self"]],["type"]]],[11,"clone","","",1,[[["self"]],["inputvalue"]]],[11,"clone","","",2,[[["self"]],["selection"]]],[11,"clone","","",4,[[["self"]],["applies"]]],[11,"clone","","",5,[[["self"]],["lookaheadvalue"]]],[11,"clone","","",11,[[["self"]],["lookaheadargument"]]],[11,"clone","","",12,[[["self"]],["lookaheadselection"]]],[11,"clone","juniper::parser","",19,[[["self"]],["scalartoken"]]],[11,"clone","","",18,[[["self"]],["token"]]],[11,"clone","","",21,[[["self"]],["sourceposition"]]],[11,"clone","","",16,[[["self"]],["spanning"]]],[11,"clone","juniper::meta","",30,[[["self"]],["deprecationstatus"]]],[11,"clone","","",47,[[["self"]],["field"]]],[11,"clone","","",48,[[["self"]],["argument"]]],[11,"clone","","",29,[[["self"]],["enumvalue"]]],[11,"clone","juniper","",6,[[["self"]],["typekind"]]],[11,"clone","","",24,[[["self"]],["id"]]],[11,"clone","juniper::http","",27,[[["self"]],["graphqlrequest"]]],[11,"from","juniper","",8,[[["object"]],["self"]]],[11,"from","","",7,[[["i32"]],["self"]]],[11,"from","","",7,[[["f64"]],["self"]]],[11,"from","","",7,[[["string"]],["self"]]],[11,"from","","",7,[[["bool"]],["self"]]],[11,"from","","",7,[[["str"]],["self"]]],[11,"from","","",8,[[["option"]],["value"]]],[11,"from","","",8,[[["str"]],["self"]]],[11,"from","","",8,[[["string"]],["self"]]],[11,"from","","",8,[[["i32"]],["self"]]],[11,"from","","",8,[[["f64"]],["self"]]],[11,"from","","",8,[[["bool"]],["self"]]],[11,"from","","",14,[[["t"]],["fielderror"]]],[11,"from","","",24,[[["string"]],["id"]]],[11,"from","","",9,[[["spanning",["parseerror"]]],["graphqlerror"]]],[11,"partial_cmp","","",13,[[["self"],["executionerror"]],["option",["ordering"]]]],[11,"partial_cmp","juniper::parser","",21,[[["self"],["sourceposition"]],["option",["ordering"]]]],[11,"lt","","",21,[[["self"],["sourceposition"]],["bool"]]],[11,"le","","",21,[[["self"],["sourceposition"]],["bool"]]],[11,"gt","","",21,[[["self"],["sourceposition"]],["bool"]]],[11,"ge","","",21,[[["self"],["sourceposition"]],["bool"]]],[11,"partial_cmp","juniper","",26,[[["self"],["ruleerror"]],["option",["ordering"]]]],[11,"lt","","",26,[[["self"],["ruleerror"]],["bool"]]],[11,"le","","",26,[[["self"],["ruleerror"]],["bool"]]],[11,"gt","","",26,[[["self"],["ruleerror"]],["bool"]]],[11,"ge","","",26,[[["self"],["ruleerror"]],["bool"]]],[11,"fmt","","",10,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",7,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",8,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",11,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",12,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",13,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",14,[[["self"],["formatter"]],["result"]]],[11,"fmt","juniper::parser","",19,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",18,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",17,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",20,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",21,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",16,[[["self"],["formatter"]],["result"]]],[11,"fmt","juniper::meta","",30,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",39,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",40,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",41,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",43,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",44,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",46,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",49,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",47,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",48,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",29,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",38,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",42,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",45,[[["self"],["formatter"]],["result"]]],[11,"fmt","juniper","",22,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",6,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",23,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",24,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",25,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",26,[[["self"],["formatter"]],["result"]]],[11,"fmt","juniper::http","",27,[[["self"],["formatter"]],["result"]]],[11,"fmt","juniper","",9,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",7,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","juniper::parser","",18,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",17,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",20,[[["self"],["formatter"]],["result"]]],[11,"hash","","",21,N],[11,"hash","","",16,N],[11,"hash","juniper::meta","",30,N],[11,"deref","juniper","",24,[[["self"]],["str"]]],[11,"from_iter","","",10,[[["i"]],["self"]]],[11,"serialize","","",7,[[["self"],["s"]],["result"]]],[11,"serialize","juniper::http","",27,[[["self"],["__s"]],["result"]]],[11,"serialize","","",28,[[["self"],["s"]],["result"]]],[11,"serialize","juniper","",13,[[["self"],["s"]],["result"]]],[11,"serialize","","",9,[[["self"],["s"]],["result"]]],[11,"serialize","","",1,[[["self"],["s"]],["result"]]],[11,"serialize","","",26,[[["self"],["s"]],["result"]]],[11,"serialize","juniper::parser","",21,[[["self"],["s"]],["result"]]],[11,"serialize","","",16,[[["self"],["s"]],["result"]]],[11,"serialize","juniper","",10,[[["self"],["s"]],["result"]]],[11,"serialize","","",8,[[["self"],["s"]],["result"]]],[11,"deserialize","juniper::http","",27,[[["__d"]],["result"]]],[11,"deserialize","juniper","",1,[[["d"]],["result",["inputvalue"]]]],[11,"is_type","","Checks if the current value contains the a value of the…",37,[[["self"]],["bool"]]],[11,"has_child","","Check if a given field exists",33,[[["self"],["str"]],["bool"]]],[11,"argument","","Get the top level argument with a given name from the…",33,[[["self"],["str"]],["option",["lookaheadargument"]]]],[11,"is_deprecated","juniper::meta","If this deprecation status indicates the item is deprecated.",30,[[["self"]],["bool"]]],[11,"reason","","An optional reason for the deprecation, or none if…",30,[[["self"]],["option",["string"]]]],[11,"name","","Access the name of the type, if applicable",49,[[["self"]],["option",["str"]]]],[11,"description","","Access the description of the type, if applicable",49,[[["self"]],["option",["string"]]]],[11,"type_kind","","Construct a `TypeKind` for a given type",49,[[["self"]],["typekind"]]],[11,"field_by_name","","Access a field's meta data given its name",49,[[["self"],["str"]],["option",["field"]]]],[11,"input_field_by_name","","Access an input field's meta data given its name",49,[[["self"],["str"]],["option",["argument"]]]],[11,"as_type","","Construct a `Type` literal instance based on the metadata",49,[[["self"]],["type"]]],[11,"input_value_parse_fn","","Access the input value parse function, if applicable",49,[[["self"]],["option"]]],[11,"is_composite","","Returns true if the type is a composite type",49,[[["self"]],["bool"]]],[11,"is_leaf","","Returns true if the type can occur in leaf positions in…",49,[[["self"]],["bool"]]],[11,"is_abstract","","Returns true if the type is abstract",49,[[["self"]],["bool"]]],[11,"is_input","","Returns true if the type can be used in input positions,…",49,[[["self"]],["bool"]]],[11,"new","","Build a new scalar type metadata with the specified name",38,[[["cow",["str"]]],["self"]]],[11,"description","","Set the description for the given scalar type",38,[[["self"],["str"]],["scalarmeta"]]],[11,"into_meta","","Wrap the scalar in a generic meta type",38,[[["self"]],["metatype"]]],[11,"new","","Build a new list type by wrapping the specified type",39,[[["type"]],["listmeta"]]],[11,"into_meta","","Wrap the list in a generic meta type",39,[[["self"]],["metatype"]]],[11,"new","","Build a new nullable type by wrapping the specified type",40,[[["type"]],["nullablemeta"]]],[11,"into_meta","","Wrap the nullable type in a generic meta type",40,[[["self"]],["metatype"]]],[11,"new","","Build a new object type with the specified name and fields",41,N],[11,"description","","Set the description for the object",41,[[["self"],["str"]],["objectmeta"]]],[11,"interfaces","","Set the interfaces this type implements",41,N],[11,"into_meta","","Wrap this object type in a generic meta type",41,[[["self"]],["metatype"]]],[11,"new","","Build a new enum type with the specified name and possible…",42,N],[11,"description","","Set the description of the type",42,[[["self"],["str"]],["enummeta"]]],[11,"into_meta","","Wrap this enum type in a generic meta type",42,[[["self"]],["metatype"]]],[11,"new","","Build a new interface type with the specified name and…",43,N],[11,"description","","Set the description of the type",43,[[["self"],["str"]],["interfacemeta"]]],[11,"into_meta","","Wrap this interface type in a generic meta type",43,[[["self"]],["metatype"]]],[11,"new","","Build a new union type with the specified name and…",44,N],[11,"description","","Set the description of the type",44,[[["self"],["str"]],["unionmeta"]]],[11,"into_meta","","Wrap this union type in a generic meta type",44,[[["self"]],["metatype"]]],[11,"new","","Build a new input type with the specified name and input…",45,N],[11,"description","","Set the description of the type",45,[[["self"],["str"]],["inputobjectmeta"]]],[11,"into_meta","","Wrap this union type in a generic meta type",45,[[["self"]],["metatype"]]],[11,"description","","Set the description of the field",47,[[["self"],["str"]],["self"]]],[11,"push_docstring","","Adds a (multi)line doc string to the description of the…",47,N],[11,"argument","","Add an argument to the field",47,[[["self"],["argument"]],["self"]]],[11,"deprecated","","Set the field to be deprecated with an optional reason.",47,[[["self"],["option",["str"]]],["self"]]],[11,"description","","Set the description of the argument",48,[[["self"],["str"]],["self"]]],[11,"push_docstring","","Adds a (multi)line doc string to the description of the…",48,N],[11,"default_value","","Set the default value of the argument",48,[[["self"],["inputvalue"]],["self"]]],[11,"new","","Construct a new enum value with the provided name",29,[[["str"]],["enumvalue"]]],[11,"description","","Set the description of the enum value",29,[[["self"],["str"]],["enumvalue"]]],[11,"deprecated","","Set the enum value to be deprecated with an optional reason.",29,[[["self"],["option",["str"]]],["self"]]],[11,"resolve_field","juniper","Resolve the value of a single field on this type.",35,N],[11,"resolve_into_type","","Resolve this interface or union into a concrete type",35,N],[11,"concrete_type_name","","Return the concrete type name for this instance/union.",35,N],[11,"resolve","","Resolve the provided selection set against the current…",35,N]],"paths":[[3,"Registry"],[4,"InputValue"],[4,"Selection"],[4,"Type"],[4,"Applies"],[4,"LookAheadValue"],[4,"TypeKind"],[4,"DefaultScalarValue"],[4,"Value"],[4,"GraphQLError"],[3,"Object"],[3,"LookAheadArgument"],[3,"LookAheadSelection"],[3,"ExecutionError"],[3,"FieldError"],[3,"Executor"],[3,"Spanning"],[4,"LexerError"],[4,"Token"],[4,"ScalarToken"],[4,"ParseError"],[3,"SourcePosition"],[3,"RootNode"],[3,"Arguments"],[3,"ID"],[3,"EmptyMutation"],[3,"RuleError"],[3,"GraphQLRequest"],[3,"GraphQLResponse"],[3,"EnumValue"],[4,"DeprecationStatus"],[8,"FromInputValue"],[8,"ToInputValue"],[8,"LookAheadMethods"],[8,"FromContext"],[8,"GraphQLType"],[8,"ParseScalarValue"],[8,"ScalarValue"],[3,"ScalarMeta"],[3,"ListMeta"],[3,"NullableMeta"],[3,"ObjectMeta"],[3,"EnumMeta"],[3,"InterfaceMeta"],[3,"UnionMeta"],[3,"InputObjectMeta"],[3,"PlaceholderMeta"],[3,"Field"],[3,"Argument"],[4,"MetaType"]]};
searchIndex["tsukuyomi"]={"doc":"Tsukuyomi is an asynchronous Web framework for Rust.","items":[[8,"IntoResponse","tsukuyomi","A trait representing the conversion into an HTTP response.",N,N],[10,"into_response","","Converts itself into an HTTP response.",0,[[["self"]],["response",["body"]]]],[3,"App","","The main type representing an HTTP application.",N,N],[3,"Error","","A type that contains arbitrary HTTP error values.",N,N],[3,"Input","","A proxy object for accessing the incoming HTTP request data.",N,N],[12,"request","","A reference to `Request` without the message body.",1,N],[12,"params","","A set of parameter values extracted by the router.",1,N],[12,"cookies","","A proxy object for accessing Cookie values.",1,N],[12,"locals","","An any-map that contains arbitrary request-local data.",1,N],[12,"response_headers","","A map of header fields that will be inserted at reply to…",1,N],[0,"util","","Miscellaneous components used within the framework.",N,N],[3,"Chain","tsukuyomi::util","A pair of structs representing arbitrary chain structure.",N,N],[4,"Never","","A helper type which emulates the standard `never_type`…",N,N],[4,"Either","","",N,N],[13,"Left","","",2,N],[13,"Right","","",2,N],[8,"TryFrom","","A trait representing the conversion from the arbitrary…",N,N],[16,"Error","","",3,N],[10,"try_from","","",3,[[["t"]],["result"]]],[8,"TryInto","","A trait representing the conversion into a value of…",N,N],[16,"Error","","",4,N],[10,"try_into","","",4,[[["self"]],["result"]]],[11,"new","","",5,[[["l"],["r"]],["self"]]],[0,"app","tsukuyomi","Components for constructing HTTP applications.",N,N],[3,"AppBody","tsukuyomi::app","",N,N],[3,"AppService","","The instance of `Service` generated by `App`.",N,N],[3,"App","","The main type representing an HTTP application.",N,N],[0,"concurrency","","Specification of trait object's concurrency used in `App`.",N,N],[3,"DefaultConcurrency","tsukuyomi::app::concurrency","A `Conccurency` used in `App` by default.",N,N],[3,"BoxedHandler","","",N,N],[0,"current_thread","","",N,N],[3,"CurrentThread","tsukuyomi::app::concurrency::current_thread","The implementor of `Concurrency` which means that `App` is…",N,N],[3,"BoxedHandler","","",N,N],[8,"Concurrency","tsukuyomi::app::concurrency","A trait to specify the concurrency of trait objects inside…",N,N],[16,"Handler","","",6,N],[0,"config","tsukuyomi::app","",N,N],[3,"Error","tsukuyomi::app::config","An error type which will be thrown from `AppBuilder`.",N,N],[3,"Scope","","A type representing the \"scope\" in Web application.",N,N],[6,"Result","","A type alias of `Result<T, E>` whose error type is…",N,N],[11,"custom","","",7,[[["e"]],["self"]]],[11,"build","tsukuyomi::app","Construct an `App` using the provided function.",8,[[["f"]],["result"]]],[11,"at","tsukuyomi::app::config","Adds a route onto the current scope.",9,[[["self"],["p"],["m2"],["t"]],["result"]]],[11,"default","","Adds a default route onto the current scope.",9,[[["self"],["m2"],["t"]],["result"]]],[11,"nest","","Creates a sub-scope onto the current scope.",9,[[["self"],["p"],["m2"],["f"]],["result"]]],[11,"with","","Adds the provided `ModifyHandler` to the stack and…",9,[[["self"],["m2"],["f"]],["result"]]],[0,"path","tsukuyomi::app","",N,N],[3,"Path","tsukuyomi::app::path","",N,N],[8,"PathExtractor","","",N,N],[16,"Output","","",10,N],[10,"extract","","",10,[[["option",["params"]]],["result",["error"]]]],[8,"IntoPath","","",N,N],[16,"Output","","",11,N],[16,"Extractor","","",11,N],[10,"into_path","","",11,[[["self"]],["path"]]],[11,"new","","Creates a new `Path` with the specified path and extractor.",12,[[["str"]],["self"]]],[11,"remote_addr","tsukuyomi::app","",13,[[["self"],["socketaddr"]],["self"]]],[17,"REMOTE_ADDR","","",N,N],[11,"new_service","","Creates a new instance of `AppService` associated with…",8,[[["self"]],["appservice"]]],[0,"endpoint","tsukuyomi","Definition of `Endpoint`.",N,N],[3,"ApplyContext","tsukuyomi::endpoint","",N,N],[3,"ApplyError","","",N,N],[5,"endpoint","","A function to create an `Endpoint` from the specified…",N,N],[0,"builder","","",N,N],[3,"Builder","tsukuyomi::endpoint::builder","A builder of `Endpoint`.",N,N],[5,"any","","",N,[[],["builder"]]],[5,"allow_only","","",N,N],[5,"get","","",N,[[],["builder"]]],[5,"post","","",N,[[],["builder"]]],[5,"put","","",N,[[],["builder"]]],[5,"delete","","",N,[[],["builder"]]],[5,"head","","",N,[[],["builder"]]],[5,"options","","",N,[[],["builder"]]],[5,"connect","","",N,[[],["builder"]]],[5,"patch","","",N,[[],["builder"]]],[5,"trace","","",N,[[],["builder"]]],[5,"get_or_head","","",N,[[],["builder"]]],[5,"call","","A shortcut to `endpoint::any().call(f)`",N,N],[5,"call_async","","A shortcut to `endpoint::any().call_async(f)`.",N,N],[5,"reply","","A shortcut to `endpoint::any().reply(output)`.",N,N],[11,"allow_any","","Creates a `Builder` that accepts the all of HTTP methods.",14,[[],["self"]]],[11,"allow_only","","Creates a `Builder` that accepts only the specified HTTP…",14,N],[11,"extract","","Appends a supplemental `Extractor` to this endpoint.",14,[[["self"],["e2"]],["builder",["chain"]]]],[11,"call","","Creates an endpoint that replies its result immediately.",14,N],[11,"call_async","","Creates an `Endpoint` that replies its result as a `Future`.",14,N],[11,"reply","","Creates an `Endpoint` that replies the specified value.",14,N],[6,"ApplyResult","tsukuyomi::endpoint","",N,N],[8,"Endpoint","","A trait representing the process to be performed when a…",N,N],[16,"Output","","",15,N],[16,"Error","","",15,N],[16,"Future","","",15,N],[10,"apply","","Determines the `Action` that this endpoint performs based…",15,[[["self"],["t"],["applycontext"]],["applyresult"]]],[10,"allowed_methods","","Returns a list of HTTP methods that this endpoint accepts.",15,[[["self"]],["allowedmethods"]]],[11,"method","","Returns HTTP method of the request.",16,[[["self"]],["method"]]],[11,"method_not_allowed","","",17,[[],["applyerror"]]],[0,"error","tsukuyomi","Error representation during handling the request.",N,N],[3,"BoxedStdCompat","tsukuyomi::error","A wrapper type for treating arbitrary error type as an…",N,N],[3,"Error","","A type that contains arbitrary HTTP error values.",N,N],[5,"err_msg","","Creates an `Error` from the specified message and HTTP…",N,[[["statuscode"],["d"]],["error"]]],[5,"bad_request","","Equivalent to `err_msg(StatusCode::BAD_REQUEST, msg)`.",N,[[["d"]],["error"]]],[5,"unauthorized","","Equivalent to `err_msg(StatusCode::UNAUTHORIZED, msg)`.",N,[[["d"]],["error"]]],[5,"forbidden","","Equivalent to `err_msg(StatusCode::FORBIDDEN, msg)`.",N,[[["d"]],["error"]]],[5,"not_found","","Equivalent to `err_msg(StatusCode::NOT_FOUND, msg)`.",N,[[["d"]],["error"]]],[5,"method_not_allowed","","Equivalent to `err_msg(StatusCode::METHOD_NOT_ALLOWED,…",N,[[["d"]],["error"]]],[5,"internal_server_error","","Equivalent to `err_msg(StatusCode::INTERNAL_SERVER_ERROR,…",N,[[["d"]],["error"]]],[6,"Result","","A type alias of `Result<T, E>` with `error::Error` as…",N,N],[8,"HttpError","","A trait representing error values to be converted into an…",N,N],[10,"status_code","","Returns an HTTP status code associated with this error…",18,[[["self"]],["statuscode"]]],[11,"to_response","","Creates an HTTP response from this error value.",18,[[["self"]],["response"]]],[11,"is","","Returns whether the concrete type of this object is the…",18,[[["self"]],["bool"]]],[11,"downcast_ref","","Attempts to downcast this object into the specified…",18,[[["self"]],["option"]]],[11,"downcast_mut","","Attempts to downcast this object into the specified…",18,[[["self"]],["option"]]],[11,"downcast","","Attempts to downcast this object into the specified…",18,[[["box"]],["result",["box","box"]]]],[11,"into_inner","","",19,[[["self"]],["box",["error"]]]],[11,"get_ref","","",19,[[["self"]],["error"]]],[11,"downcast","","",19,[[["self"]],["result"]]],[11,"downcast_ref","","",19,[[["self"]],["option"]]],[11,"status_code","","Returns an HTTP status code associated with the underlying…",20,[[["self"]],["statuscode"]]],[11,"to_response","","Creates an HTTP response from the underlying error value.",20,[[["self"]],["response"]]],[11,"downcast","","Attempts to downcast the underlying error value into the…",20,[[["self"]],["result"]]],[11,"downcast_ref","","Attempts to downcast the underlying error value into the…",20,[[["self"]],["option"]]],[0,"extractor","tsukuyomi","Definition of `Extractor` and its implementors.",N,N],[5,"extract","tsukuyomi::extractor","Creates an `Extractor` from the provided function that…",N,N],[5,"ready","","Creates an `Extractor` from a synchronous function.",N,N],[5,"value","","Creates an `Extractor` that just clones and returns the…",N,N],[5,"method","","Creates an `Extractor` that returns the value of request…",N,N],[5,"uri","","Creates an `Extractor` that returns the value of request…",N,N],[5,"version","","Creates an `Extractor` that returns the value of the…",N,N],[5,"query","","Creates an `Extractor` that parses the value of query…",N,N],[5,"extension","","Creates an `Extractor` that returns the value of extension…",N,N],[0,"body","","Extractors for parsing message body.",N,N],[5,"plain","tsukuyomi::extractor::body","Creates an `Extractor` that parses the entire of request…",N,N],[5,"json","","Creates an `Extractor` that parses the entire of request…",N,N],[5,"urlencoded","","Creates an `Extractor` that parses the entire of request…",N,N],[5,"read_all","","Creates an extractor that reads the entire of request body…",N,N],[5,"stream","","Creates an `Extractor` that takes the raw instance of…",N,N],[0,"ext","tsukuyomi::extractor","A set of extensions for `Extractor`s.",N,N],[3,"Fallible","tsukuyomi::extractor::ext","",N,N],[3,"Map","","",N,N],[3,"MapErr","","",N,N],[3,"Optional","","",N,N],[3,"Or","","",N,N],[8,"ExtractorExt","","A set of extension methods for composing/formatting…",N,N],[11,"optional","","",21,[[["self"]],["optional"]]],[11,"fallible","","",21,[[["self"]],["fallible"]]],[11,"and","","",21,[[["self"],["e"]],["chain"]]],[11,"or","","",21,[[["self"],["e"]],["or"]]],[11,"map","","",21,[[["self"],["f"]],["map"]]],[11,"map_err","","",21,[[["self"],["f"]],["maperr"]]],[0,"header","tsukuyomi::extractor","Extractors for accessing HTTP header fields.",N,N],[5,"parse","tsukuyomi::extractor::header","Creates an `Extractor` that parses a header field and…",N,N],[5,"equals","","Creates an `Extractor` that checks if a header field…",N,N],[5,"headers","","Creates an `Extractor` that clones the entire of header…",N,N],[0,"local","tsukuyomi::extractor","Extractors for accessing the request-local data.",N,N],[5,"remove","tsukuyomi::extractor::local","",N,N],[5,"clone","","",N,N],[0,"method","tsukuyomi::extractor","Extractors for validation of HTTP method.",N,N],[5,"equals","tsukuyomi::extractor::method","Creates an `Extractor` that checks if the request method…",N,N],[5,"get","","",N,N],[5,"post","","",N,N],[5,"put","","",N,N],[5,"delete","","",N,N],[5,"head","","",N,N],[5,"options","","",N,N],[5,"connect","","",N,N],[5,"patch","","",N,N],[5,"trace","","",N,N],[5,"get_or_head","","",N,N],[8,"Extractor","tsukuyomi::extractor","A trait abstracting the extraction of values from the…",N,N],[16,"Output","","The type of output value extracted by `Extract`.",22,N],[16,"Error","","The error type that may be returned from `Extract`.",22,N],[16,"Extract","","The type representing an asynchronous task to extract the…",22,N],[10,"extract","","Creates an instance of `Extract`.",22,N],[0,"fs","tsukuyomi","The basic components for serving static files.",N,N],[3,"OpenConfig","tsukuyomi::fs","A set of configuration used in `NamedFile`.",N,N],[12,"chunk_size","","The size of chunked buffers.",23,N],[12,"max_age","","The maximal amount of time to refresh the resource.",23,N],[3,"NamedFile","","An instance of `Responder` for responding a file.",N,N],[3,"ArcPath","","",N,N],[3,"ServeFile","","",N,N],[3,"Staticfiles","","A configuration type for adding entries in the directory…",N,N],[11,"open","","Open a specified file with the default configuration.",24,[[["p"]],["self"]]],[11,"open_with_config","","Open a specified file with the provided configuration.",24,[[["p"],["openconfig"]],["self"]]],[11,"new","","Create a new `Staticfiles` with the specified directory…",25,[[["p"]],["self"]]],[11,"open_config","","Sets the value of `OpenConfig` used in handlers.",25,[[["self"],["openconfig"]],["self"]]],[11,"register","","Registers the static file handlers onto the provided scope.",25,[[["self"],["scope"]],["result"]]],[0,"future","tsukuyomi","Compatible layer of asynchronous tasks used within the…",N,N],[3,"Compat01","tsukuyomi::future","A wrapper struct that provides the implementation of…",N,N],[4,"MaybeDone","","",N,N],[13,"Ready","","",26,N],[13,"Pending","","",26,N],[13,"Gone","","",26,N],[5,"poll_fn","","",N,N],[5,"oneshot","","",N,N],[8,"TryFuture","","A trait that abstracts the general asynchronous tasks…",N,N],[16,"Ok","","",27,N],[16,"Error","","",27,N],[10,"poll_ready","","",27,[[["self"],["input"]],["poll"]]],[8,"Futures01CompatExt","","",N,N],[11,"compat01","","",28,[[["self"]],["compat01"]]],[11,"take_item","","",26,[[["self"]],["option"]]],[0,"handler","tsukuyomi","Definition of `Handler`.",N,N],[5,"handler","tsukuyomi::handler","",N,N],[0,"metadata","","",N,N],[3,"Uri","tsukuyomi::handler::metadata","A type representing the URI of a route.",N,N],[3,"AllowedMethods","","A set of request methods that a route accepts.",N,N],[3,"Metadata","","A set of metadata associated with the certain `Handler`.",N,N],[11,"any","","Creates an `AllowedMethods` indicating that the all of…",29,[[],["self"]]],[11,"is_any","","Returns whether this set accepts the all of HTTP methods…",29,[[["self"]],["bool"]]],[11,"contains","","",29,[[["self"],["method"]],["bool"]]],[11,"iter","","",29,N],[11,"to_header_value","","",29,[[["self"]],["headervalue"]]],[11,"merge","","",29,[[["self"],["self"]],["self"]]],[11,"new","","",30,[[["uri"]],["self"]]],[11,"without_suffix","","",30,[[],["self"]]],[11,"path","","",30,[[["self"]],["option",["uri"]]]],[11,"allowed_methods","","Returns a reference to the inner value of `AllowedMethods`.",30,[[["self"]],["allowedmethods"]]],[11,"allowed_methods_mut","","Returns a mutable reference to the inner value of…",30,[[["self"]],["allowedmethods"]]],[8,"Handler","tsukuyomi::handler","A trait representing the handler associated with the…",N,N],[16,"Output","","",31,N],[16,"Error","","",31,N],[16,"Handle","","",31,N],[10,"handle","","Creates an instance of `Handle` to handle an incoming…",31,N],[10,"metadata","","Returns the value of `Metadata` associated with this…",31,[[["self"]],["metadata"]]],[8,"ModifyHandler","","A trait representing a type for modifying the instance of…",N,N],[16,"Output","","",32,N],[16,"Error","","",32,N],[16,"Handler","","",32,N],[10,"modify","","",32,N],[0,"input","tsukuyomi","Components for accessing the incoming request data.",N,N],[3,"Input","tsukuyomi::input","A proxy object for accessing the incoming HTTP request data.",N,N],[12,"request","","A reference to `Request` without the message body.",1,N],[12,"params","","A set of parameter values extracted by the router.",1,N],[12,"cookies","","A proxy object for accessing Cookie values.",1,N],[12,"locals","","An any-map that contains arbitrary request-local data.",1,N],[12,"response_headers","","A map of header fields that will be inserted at reply to…",1,N],[3,"Cookies","","A proxy object for accessing Cookie values.",N,N],[0,"body","","Components for receiving incoming request bodies.",N,N],[3,"Chunk","tsukuyomi::input::body","",N,N],[3,"Error","","",N,N],[3,"RequestBody","","",N,N],[3,"ReadAll","","",N,N],[11,"new","","",33,N],[11,"read_all","","",33,[[["self"]],["readall"]]],[0,"header","tsukuyomi::input","",N,N],[3,"ContentType","tsukuyomi::input::header","",N,N],[5,"parse","","Parses the header field.",N,[[["input"]],["result",["option","error"]]]],[8,"FromHeaderValue","","",N,N],[16,"Error","","",34,N],[10,"from_header_value","","",34,[[["headervalue"]],["result"]]],[8,"HeaderField","","",N,N],[16,"Value","","",35,N],[18,"NAME","","",35,N],[18,"KEY","","",35,N],[0,"localmap","tsukuyomi::input","An implementation of typemap for managing request-local…",N,N],[3,"LocalKey","tsukuyomi::input::localmap","A type representing a key for request-local data stored in…",N,N],[3,"LocalMap","","A typed map storing request-local data.",N,N],[3,"OccupiedEntry","","An occupied entry.",N,N],[3,"VacantEntry","","A vacant entry.",N,N],[4,"Entry","","A view into a single entry in a `LocalMap`.",N,N],[13,"Occupied","","An occupied entry.",36,N],[13,"Vacant","","A vacant entry.",36,N],[8,"LocalData","","A trait representing a data to be stored in `LocalMap`s.",N,N],[18,"KEY","","The value of `LocalKey` associated with this type.",37,N],[11,"get","","Acquires a reference to `Self` stored in the specified…",37,[[["localmap"]],["option"]]],[11,"get_mut","","Acquires a mutable reference to `Self` stored in the…",37,[[["localmap"]],["option"]]],[11,"contains","","Returns `true` if a value of `Self` is stored in the…",37,[[["localmap"]],["bool"]]],[11,"take_from","","Extracts the instance of `Self` stored in the specified…",37,[[["localmap"]],["option"]]],[11,"insert_into","","Stores itself into the specified localmap.",37,[[["self"],["localmap"]],["option"]]],[11,"entry","","Creates an `Entry` for in-place manipulation corresponds…",37,[[["localmap"]],["entry"]]],[11,"get","","Returns a shared reference to the value corresponding to…",38,[[["self"],["localkey"]],["option"]]],[11,"get_mut","","Returns a mutable reference to the value corresponding to…",38,[[["self"],["localkey"]],["option"]]],[11,"contains_key","","Returns `true` if the map contains a value for the…",38,[[["self"],["localkey"]],["bool"]]],[11,"insert","","Inserts a value corresponding to the provided `LocalKey`…",38,[[["self"],["localkey"],["t"]],["option"]]],[11,"remove","","Removes a value corresponding to the provided `LocalKey`…",38,[[["self"],["localkey"]],["option"]]],[11,"entry","","Create a `Entry` for in-place manipulation corresponds to…",38,[[["self"],["localkey"]],["entry"]]],[11,"or_insert","","",36,[[["self"],["t"]],["t"]]],[11,"or_insert_with","","",36,[[["self"],["f"]],["t"]]],[11,"and_modify","","",36,[[["self"],["f"]],["entry"]]],[11,"get","","",39,[[["self"]],["t"]]],[11,"get_mut","","",39,[[["self"]],["t"]]],[11,"into_mut","","",39,[[["self"]],["t"]]],[11,"insert","","",39,[[["self"],["t"]],["t"]]],[11,"remove","","",39,[[["self"]],["t"]]],[11,"insert","","",40,[[["self"],["t"]],["t"]]],[0,"param","tsukuyomi::input","",N,N],[3,"Params","tsukuyomi::input::param","A proxy object for accessing extracted parameters.",N,N],[3,"PercentEncoded","","",N,N],[8,"FromPercentEncoded","","",N,N],[16,"Error","","",41,N],[10,"from_percent_encoded","","",41,[[["percentencoded"]],["result"]]],[11,"is_empty","","Returns `true` if the extracted paramater exists.",42,[[["self"]],["bool"]]],[11,"get","","Returns the value of `i`-th parameter, if exists.",42,[[["self"],["usize"]],["option",["str"]]]],[11,"catch_all","","Returns the value of catch-all parameter, if exists.",42,[[["self"]],["option",["str"]]]],[11,"name","","Returns the value of parameter whose name is equal to…",42,[[["self"],["str"]],["option",["str"]]]],[11,"new_unchecked","","",43,[[["str"]],["self"]]],[11,"decode_utf8","","",43,[[["self"]],["result",["cow","utf8error"]]]],[11,"decode_utf8_lossy","","",43,[[["self"]],["cow",["str"]]]],[11,"signed_jar","tsukuyomi::input","Creates a `SignedJar` with the specified secret key.",44,[[["self"],["key"]],["result",["signedjar"]]]],[11,"private_jar","","Creates a `PrivateJar` with the specified secret key.",44,[[["self"],["key"]],["result",["privatejar"]]]],[11,"jar","","Returns the mutable reference to the inner `CookieJar` if…",44,[[["self"]],["result",["cookiejar"]]]],[0,"output","tsukuyomi","Components for constructing HTTP responses.",N,N],[3,"ResponderFn","tsukuyomi::output","",N,N],[3,"Oneshot","","",N,N],[3,"Rendered","","A `Responder` that uses the specified preset.",N,N],[3,"Json","","",N,N],[3,"JsonPretty","","",N,N],[3,"Html","","",N,N],[5,"respond","","A function to create a `Responder` using the specified…",N,[[["r"]],["responderfn"]]],[5,"oneshot","","Creates a `Responder` from a function that returns its…",N,[[["f"]],["oneshot"]]],[5,"render","","Creates a `Responder` using the specified preset and data.",N,[[["t"]],["rendered"]]],[5,"json","","Creates a JSON responder from the specified data.",N,[[["t"]],["rendered",["json"]]]],[5,"json_pretty","","Creates a JSON response with pretty output from the…",N,[[["t"]],["rendered",["jsonpretty"]]]],[5,"html","","Creates an HTML response using the specified data.",N,[[["t"]],["rendered",["html"]]]],[8,"Responder","","A trait that abstracts the \"reply\" to the client.",N,N],[16,"Upgrade","","The type of asynchronous object to be ran after upgrading…",45,N],[16,"Error","","The error type that will be thrown by this responder.",45,N],[16,"Respond","","The asynchronous task converted from this responder.",45,N],[10,"respond","","Converts itself into a `Respond`.",45,N],[8,"Respond","","The asynchronous task that generates a reply to client.",N,N],[16,"Upgrade","","",46,N],[16,"Error","","",46,N],[10,"poll_respond","","",46,[[["self"],["input"]],["poll"]]],[8,"Preset","","A trait representing the preset for deriving the…",N,N],[16,"Upgrade","","",47,N],[16,"Error","","",47,N],[16,"Respond","","",47,N],[10,"respond","","",47,N],[0,"server","tsukuyomi","The implementation of HTTP server for tsukuyomi.",N,N],[3,"Server","tsukuyomi::server","",N,N],[11,"new","","Creates a new `Server` using the specified `App`.",48,[[["app"]],["result"]]],[11,"bind","","Spawns an HTTP server using the associated `App` onto the…",48,[[["self"],["a"]],["result"]]],[11,"run_forever","","Waits for the runtime until all spawned servers are…",48,[[["self"]]]],[0,"test","tsukuyomi","Experimental testing utility.",N,N],[3,"Location","tsukuyomi::test","",N,N],[3,"TestServer","","",N,N],[3,"TestClient","","",N,N],[3,"TestResponse","","",N,N],[3,"AssertionError","","",N,N],[4,"AssertionErrorKind","","",N,N],[13,"Mismatched","","",49,N],[12,"expected","tsukuyomi::test::AssertionErrorKind","",49,N],[12,"actual","","",49,N],[13,"MissingHeader","tsukuyomi::test","",49,N],[12,"name","tsukuyomi::test::AssertionErrorKind","",49,N],[13,"Msg","tsukuyomi::test","",49,N],[0,"status","","",N,N],[0,"header","","",N,N],[3,"EqHeader","tsukuyomi::test::header","",N,N],[3,"NotExists","","",N,N],[5,"eq","","",N,[[["headername"],["t"]],["eqheader"]]],[5,"not_exists","","",N,[[["headername"]],["notexists"]]],[0,"body","tsukuyomi::test","",N,N],[3,"EqBody","tsukuyomi::test::body","",N,N],[5,"eq","","",N,[[["t"]],["eqbody"]]],[6,"Result","tsukuyomi::test","",N,N],[8,"Assertion","","",N,N],[10,"assert","","",50,[[["self"],["testresponse"]],["result",["assertionerrorkind"]]]],[11,"new","","",51,[[["app"]],["result"]]],[11,"connect","","",51,[[["self"]],["testclient"]]],[11,"request","","",52,[[["self"],["request"]],["testresponse"]]],[11,"get","","",52,[[["self"],["str"]],["testresponse"]]],[11,"assert","","",53,[[["self"],["location"],["a"]],["result"]]],[11,"into_bytes","","",53,[[["self"]],["result",["vec"]]]],[0,"upgrade","tsukuyomi","Abstraction of HTTP upgrade in Tsukuyomi.",N,N],[3,"NeverUpgrade","tsukuyomi::upgrade","",N,N],[3,"Upgraded","","A proxy for accessing an upgraded I/O from `Upgrade`.",N,N],[6,"Error","","",N,N],[8,"Upgrade","","A trait that abstracts asynchronous tasks to be ran after…",N,N],[10,"poll_upgrade","","Polls the completion of this task with the provided I/O.",54,[[["self"],["upgraded"]],["poll",["error"]]]],[10,"close","","Notifies that the task is to be shutdown.",54,[[["self"]]]],[11,"downcast_ref","","Attempts to downcast the inner value to the specified…",55,[[["self"]],["option"]]],[11,"downcast_mut","","Attempts to downcast the inner value to the specified…",55,[[["self"]],["option"]]],[0,"vendor","tsukuyomi","Re-export of crates used within the framework and…",N,N],[6,"Result","","A type alias of `Result<T, E>` with `error::Error` as…",N,N],[8,"Endpoint","","A trait representing the process to be performed when a…",N,N],[16,"Output","","",15,N],[16,"Error","","",15,N],[16,"Future","","",15,N],[10,"apply","","Determines the `Action` that this endpoint performs based…",15,[[["self"],["t"],["applycontext"]],["applyresult"]]],[10,"allowed_methods","","Returns a list of HTTP methods that this endpoint accepts.",15,[[["self"]],["allowedmethods"]]],[8,"HttpError","","A trait representing error values to be converted into an…",N,N],[10,"status_code","","Returns an HTTP status code associated with this error…",18,[[["self"]],["statuscode"]]],[11,"to_response","","Creates an HTTP response from this error value.",18,[[["self"]],["response"]]],[8,"Extractor","","A trait abstracting the extraction of values from the…",N,N],[16,"Output","","The type of output value extracted by `Extract`.",22,N],[16,"Error","","The error type that may be returned from `Extract`.",22,N],[16,"Extract","","The type representing an asynchronous task to extract the…",22,N],[10,"extract","","Creates an instance of `Extract`.",22,N],[8,"Handler","","A trait representing the handler associated with the…",N,N],[16,"Output","","",31,N],[16,"Error","","",31,N],[16,"Handle","","",31,N],[10,"handle","","Creates an instance of `Handle` to handle an incoming…",31,N],[10,"metadata","","Returns the value of `Metadata` associated with this…",31,[[["self"]],["metadata"]]],[8,"ModifyHandler","","A trait representing a type for modifying the instance of…",N,N],[16,"Output","","",32,N],[16,"Error","","",32,N],[16,"Handler","","",32,N],[10,"modify","","",32,N],[8,"Responder","","A trait that abstracts the \"reply\" to the client.",N,N],[16,"Upgrade","","The type of asynchronous object to be ran after upgrading…",45,N],[16,"Error","","The error type that will be thrown by this responder.",45,N],[16,"Respond","","The asynchronous task converted from this responder.",45,N],[10,"respond","","Converts itself into a `Respond`.",45,N],[14,"chain","","A macro for creating a chain of expressions.",N,N],[14,"path","","A macro for generating the code that creates a [`Path`]…",N,N],[14,"local_key","","A macro to create a `LocalKey<T>`.",N,N],[14,"loc","","",N,N],[11,"try_into","tsukuyomi::app","",8,[[["self"]],["result"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[["self"]],["u"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,N],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"try_into","","",8,[[["self"]],["result"]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"try_into","tsukuyomi::error","",20,[[["self"]],["result"]]],[11,"respond","","",20,N],[11,"to_string","","",20,[[["self"]],["string"]]],[11,"from","","",20,[[["t"]],["t"]]],[11,"into","","",20,[[["self"]],["u"]]],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"try_into","","",20,[[["self"]],["result"]]],[11,"get_type_id","","",20,[[["self"]],["typeid"]]],[11,"as_fail","","",20,[[["self"]],["fail"]]],[11,"try_into","tsukuyomi::input","",1,[[["self"]],["result"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"try_into","tsukuyomi::util","",5,[[["self"]],["result"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,N],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"try_into","","",56,[[["self"]],["result"]]],[11,"to_string","","",56,[[["self"]],["string"]]],[11,"from","","",56,[[["t"]],["t"]]],[11,"into","","",56,[[["self"]],["u"]]],[11,"try_from","","",56,[[["u"]],["result"]]],[11,"borrow","","",56,[[["self"]],["t"]]],[11,"borrow_mut","","",56,[[["self"]],["t"]]],[11,"try_into","","",56,[[["self"]],["result"]]],[11,"get_type_id","","",56,[[["self"]],["typeid"]]],[11,"as_fail","","",56,[[["self"]],["fail"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"respond","","",2,N],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,N],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"try_into","tsukuyomi::handler::metadata","",57,[[["self"]],["result"]]],[11,"to_string","","",57,[[["self"]],["string"]]],[11,"from","","",57,[[["t"]],["t"]]],[11,"into","","",57,[[["self"]],["u"]]],[11,"to_owned","","",57,[[["self"]],["t"]]],[11,"clone_into","","",57,N],[11,"try_from","","",57,[[["u"]],["result"]]],[11,"borrow","","",57,[[["self"]],["t"]]],[11,"borrow_mut","","",57,[[["self"]],["t"]]],[11,"try_into","","",57,[[["self"]],["result"]]],[11,"get_type_id","","",57,[[["self"]],["typeid"]]],[11,"equivalent","","",57,[[["self"],["k"]],["bool"]]],[11,"try_into","tsukuyomi::app","",58,[[["self"]],["result"]]],[11,"from","","",58,[[["t"]],["t"]]],[11,"into","","",58,[[["self"]],["u"]]],[11,"try_from","","",58,[[["u"]],["result"]]],[11,"borrow","","",58,[[["self"]],["t"]]],[11,"borrow_mut","","",58,[[["self"]],["t"]]],[11,"try_into","","",58,[[["self"]],["result"]]],[11,"get_type_id","","",58,[[["self"]],["typeid"]]],[11,"poll_data","","",58,[[["self"]],["result",["async"]]]],[11,"size_hint","","",58,[[["self"]],["sizehint"]]],[11,"poll_trailers","","",58,[[["self"]],["result",["async"]]]],[11,"is_end_stream","","",58,[[["self"]],["bool"]]],[11,"upgrade","","",58,[[["self"],["i"]],["result"]]],[11,"try_into","","",13,[[["self"]],["result"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"into","","",13,[[["self"]],["u"]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"try_into","","",13,[[["self"]],["result"]]],[11,"get_type_id","","",13,[[["self"]],["typeid"]]],[11,"poll_ready","","",13,[[["self"]],["result",["async"]]]],[11,"respond","","",13,N],[11,"into_service","","",13,N],[11,"try_into","tsukuyomi::app::concurrency","",59,[[["self"]],["result"]]],[11,"from","","",59,[[["t"]],["t"]]],[11,"into","","",59,[[["self"]],["u"]]],[11,"try_from","","",59,[[["u"]],["result"]]],[11,"borrow","","",59,[[["self"]],["t"]]],[11,"borrow_mut","","",59,[[["self"]],["t"]]],[11,"try_into","","",59,[[["self"]],["result"]]],[11,"get_type_id","","",59,[[["self"]],["typeid"]]],[11,"try_into","","",60,[[["self"]],["result"]]],[11,"from","","",60,[[["t"]],["t"]]],[11,"into","","",60,[[["self"]],["u"]]],[11,"try_from","","",60,[[["u"]],["result"]]],[11,"borrow","","",60,[[["self"]],["t"]]],[11,"borrow_mut","","",60,[[["self"]],["t"]]],[11,"try_into","","",60,[[["self"]],["result"]]],[11,"get_type_id","","",60,[[["self"]],["typeid"]]],[11,"try_into","tsukuyomi::app::concurrency::current_thread","",61,[[["self"]],["result"]]],[11,"from","","",61,[[["t"]],["t"]]],[11,"into","","",61,[[["self"]],["u"]]],[11,"try_from","","",61,[[["u"]],["result"]]],[11,"borrow","","",61,[[["self"]],["t"]]],[11,"borrow_mut","","",61,[[["self"]],["t"]]],[11,"try_into","","",61,[[["self"]],["result"]]],[11,"get_type_id","","",61,[[["self"]],["typeid"]]],[11,"try_into","","",62,[[["self"]],["result"]]],[11,"from","","",62,[[["t"]],["t"]]],[11,"into","","",62,[[["self"]],["u"]]],[11,"try_from","","",62,[[["u"]],["result"]]],[11,"borrow","","",62,[[["self"]],["t"]]],[11,"borrow_mut","","",62,[[["self"]],["t"]]],[11,"try_into","","",62,[[["self"]],["result"]]],[11,"get_type_id","","",62,[[["self"]],["typeid"]]],[11,"try_into","tsukuyomi::app::config","",7,[[["self"]],["result"]]],[11,"to_string","","",7,[[["self"]],["string"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[["self"]],["u"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"as_fail","","",7,[[["self"]],["fail"]]],[11,"try_into","","",9,[[["self"]],["result"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[["self"]],["u"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"try_into","","",9,[[["self"]],["result"]]],[11,"get_type_id","","",9,[[["self"]],["typeid"]]],[11,"try_into","tsukuyomi::app::path","",12,[[["self"]],["result"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"into","","",12,[[["self"]],["u"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"try_into","","",12,[[["self"]],["result"]]],[11,"get_type_id","","",12,[[["self"]],["typeid"]]],[11,"try_into","tsukuyomi::endpoint","",16,[[["self"]],["result"]]],[11,"from","","",16,[[["t"]],["t"]]],[11,"into","","",16,[[["self"]],["u"]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"try_into","","",16,[[["self"]],["result"]]],[11,"get_type_id","","",16,[[["self"]],["typeid"]]],[11,"try_into","","",17,[[["self"]],["result"]]],[11,"from","","",17,[[["t"]],["t"]]],[11,"into","","",17,[[["self"]],["u"]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"try_into","","",17,[[["self"]],["result"]]],[11,"get_type_id","","",17,[[["self"]],["typeid"]]],[11,"try_into","tsukuyomi::endpoint::builder","",14,[[["self"]],["result"]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"into","","",14,[[["self"]],["u"]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"try_into","","",14,[[["self"]],["result"]]],[11,"get_type_id","","",14,[[["self"]],["typeid"]]],[11,"try_into","tsukuyomi::error","",19,[[["self"]],["result"]]],[11,"to_string","","",19,[[["self"]],["string"]]],[11,"from","","",19,[[["t"]],["t"]]],[11,"into","","",19,[[["self"]],["u"]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"try_into","","",19,[[["self"]],["result"]]],[11,"get_type_id","","",19,[[["self"]],["typeid"]]],[11,"as_fail","","",19,[[["self"]],["fail"]]],[11,"try_into","tsukuyomi::extractor::ext","",63,[[["self"]],["result"]]],[11,"from","","",63,[[["t"]],["t"]]],[11,"into","","",63,[[["self"]],["u"]]],[11,"try_from","","",63,[[["u"]],["result"]]],[11,"borrow","","",63,[[["self"]],["t"]]],[11,"borrow_mut","","",63,[[["self"]],["t"]]],[11,"try_into","","",63,[[["self"]],["result"]]],[11,"get_type_id","","",63,[[["self"]],["typeid"]]],[11,"try_into","","",64,[[["self"]],["result"]]],[11,"from","","",64,[[["t"]],["t"]]],[11,"into","","",64,[[["self"]],["u"]]],[11,"try_from","","",64,[[["u"]],["result"]]],[11,"borrow","","",64,[[["self"]],["t"]]],[11,"borrow_mut","","",64,[[["self"]],["t"]]],[11,"try_into","","",64,[[["self"]],["result"]]],[11,"get_type_id","","",64,[[["self"]],["typeid"]]],[11,"try_into","","",65,[[["self"]],["result"]]],[11,"from","","",65,[[["t"]],["t"]]],[11,"into","","",65,[[["self"]],["u"]]],[11,"try_from","","",65,[[["u"]],["result"]]],[11,"borrow","","",65,[[["self"]],["t"]]],[11,"borrow_mut","","",65,[[["self"]],["t"]]],[11,"try_into","","",65,[[["self"]],["result"]]],[11,"get_type_id","","",65,[[["self"]],["typeid"]]],[11,"try_into","","",66,[[["self"]],["result"]]],[11,"from","","",66,[[["t"]],["t"]]],[11,"into","","",66,[[["self"]],["u"]]],[11,"try_from","","",66,[[["u"]],["result"]]],[11,"borrow","","",66,[[["self"]],["t"]]],[11,"borrow_mut","","",66,[[["self"]],["t"]]],[11,"try_into","","",66,[[["self"]],["result"]]],[11,"get_type_id","","",66,[[["self"]],["typeid"]]],[11,"try_into","","",67,[[["self"]],["result"]]],[11,"from","","",67,[[["t"]],["t"]]],[11,"into","","",67,[[["self"]],["u"]]],[11,"try_from","","",67,[[["u"]],["result"]]],[11,"borrow","","",67,[[["self"]],["t"]]],[11,"borrow_mut","","",67,[[["self"]],["t"]]],[11,"try_into","","",67,[[["self"]],["result"]]],[11,"get_type_id","","",67,[[["self"]],["typeid"]]],[11,"try_into","tsukuyomi::fs","",23,[[["self"]],["result"]]],[11,"from","","",23,[[["t"]],["t"]]],[11,"into","","",23,[[["self"]],["u"]]],[11,"to_owned","","",23,[[["self"]],["t"]]],[11,"clone_into","","",23,N],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"try_into","","",23,[[["self"]],["result"]]],[11,"get_type_id","","",23,[[["self"]],["typeid"]]],[11,"try_into","","",24,[[["self"]],["result"]]],[11,"respond","","",24,N],[11,"from","","",24,[[["t"]],["t"]]],[11,"into","","",24,[[["self"]],["u"]]],[11,"to_owned","","",24,[[["self"]],["t"]]],[11,"clone_into","","",24,N],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"try_into","","",24,[[["self"]],["result"]]],[11,"get_type_id","","",24,[[["self"]],["typeid"]]],[11,"try_into","","",68,[[["self"]],["result"]]],[11,"from","","",68,[[["t"]],["t"]]],[11,"into","","",68,[[["self"]],["u"]]],[11,"to_owned","","",68,[[["self"]],["t"]]],[11,"clone_into","","",68,N],[11,"try_from","","",68,[[["u"]],["result"]]],[11,"borrow","","",68,[[["self"]],["t"]]],[11,"borrow_mut","","",68,[[["self"]],["t"]]],[11,"try_into","","",68,[[["self"]],["result"]]],[11,"get_type_id","","",68,[[["self"]],["typeid"]]],[11,"try_into","","",69,[[["self"]],["result"]]],[11,"from","","",69,[[["t"]],["t"]]],[11,"into","","",69,[[["self"]],["u"]]],[11,"to_owned","","",69,[[["self"]],["t"]]],[11,"clone_into","","",69,N],[11,"try_from","","",69,[[["u"]],["result"]]],[11,"borrow","","",69,[[["self"]],["t"]]],[11,"borrow_mut","","",69,[[["self"]],["t"]]],[11,"try_into","","",69,[[["self"]],["result"]]],[11,"get_type_id","","",69,[[["self"]],["typeid"]]],[11,"try_into","","",25,[[["self"]],["result"]]],[11,"from","","",25,[[["t"]],["t"]]],[11,"into","","",25,[[["self"]],["u"]]],[11,"try_from","","",25,[[["u"]],["result"]]],[11,"borrow","","",25,[[["self"]],["t"]]],[11,"borrow_mut","","",25,[[["self"]],["t"]]],[11,"try_into","","",25,[[["self"]],["result"]]],[11,"get_type_id","","",25,[[["self"]],["typeid"]]],[11,"try_into","tsukuyomi::future","",70,[[["self"]],["result"]]],[11,"poll_respond","","",70,[[["self"],["input"]],["result",["async"]]]],[11,"from","","",70,[[["t"]],["t"]]],[11,"into","","",70,[[["self"]],["u"]]],[11,"try_from","","",70,[[["u"]],["result"]]],[11,"borrow","","",70,[[["self"]],["t"]]],[11,"borrow_mut","","",70,[[["self"]],["t"]]],[11,"try_into","","",70,[[["self"]],["result"]]],[11,"get_type_id","","",70,[[["self"]],["typeid"]]],[11,"try_into","","",26,[[["self"]],["result"]]],[11,"poll_respond","","",26,[[["self"],["input"]],["result",["async"]]]],[11,"from","","",26,[[["t"]],["t"]]],[11,"into","","",26,[[["self"]],["u"]]],[11,"try_from","","",26,[[["u"]],["result"]]],[11,"borrow","","",26,[[["self"]],["t"]]],[11,"borrow_mut","","",26,[[["self"]],["t"]]],[11,"try_into","","",26,[[["self"]],["result"]]],[11,"get_type_id","","",26,[[["self"]],["typeid"]]],[11,"try_into","tsukuyomi::handler::metadata","",29,[[["self"]],["result"]]],[11,"into_iter","","",29,[[["self"]],["i"]]],[11,"from","","",29,[[["t"]],["t"]]],[11,"into","","",29,[[["self"]],["u"]]],[11,"to_owned","","",29,[[["self"]],["t"]]],[11,"clone_into","","",29,N],[11,"try_from","","",29,[[["u"]],["result"]]],[11,"borrow","","",29,[[["self"]],["t"]]],[11,"borrow_mut","","",29,[[["self"]],["t"]]],[11,"try_into","","",29,[[["self"]],["result"]]],[11,"get_type_id","","",29,[[["self"]],["typeid"]]],[11,"try_into","","",30,[[["self"]],["result"]]],[11,"from","","",30,[[["t"]],["t"]]],[11,"into","","",30,[[["self"]],["u"]]],[11,"to_owned","","",30,[[["self"]],["t"]]],[11,"clone_into","","",30,N],[11,"try_from","","",30,[[["u"]],["result"]]],[11,"borrow","","",30,[[["self"]],["t"]]],[11,"borrow_mut","","",30,[[["self"]],["t"]]],[11,"try_into","","",30,[[["self"]],["result"]]],[11,"get_type_id","","",30,[[["self"]],["typeid"]]],[11,"try_into","tsukuyomi::input","",44,[[["self"]],["result"]]],[11,"from","","",44,[[["t"]],["t"]]],[11,"into","","",44,[[["self"]],["u"]]],[11,"try_from","","",44,[[["u"]],["result"]]],[11,"borrow","","",44,[[["self"]],["t"]]],[11,"borrow_mut","","",44,[[["self"]],["t"]]],[11,"try_into","","",44,[[["self"]],["result"]]],[11,"get_type_id","","",44,[[["self"]],["typeid"]]],[11,"try_into","tsukuyomi::input::body","",71,[[["self"]],["result"]]],[11,"from","","",71,[[["t"]],["t"]]],[11,"into","","",71,[[["self"]],["u"]]],[11,"try_from","","",71,[[["u"]],["result"]]],[11,"borrow","","",71,[[["self"]],["t"]]],[11,"borrow_mut","","",71,[[["self"]],["t"]]],[11,"try_into","","",71,[[["self"]],["result"]]],[11,"get_type_id","","",71,[[["self"]],["typeid"]]],[11,"into_buf","","",71,[[["self"]],["t"]]],[11,"try_into","","",72,[[["self"]],["result"]]],[11,"to_string","","",72,[[["self"]],["string"]]],[11,"from","","",72,[[["t"]],["t"]]],[11,"into","","",72,[[["self"]],["u"]]],[11,"try_from","","",72,[[["u"]],["result"]]],[11,"borrow","","",72,[[["self"]],["t"]]],[11,"borrow_mut","","",72,[[["self"]],["t"]]],[11,"try_into","","",72,[[["self"]],["result"]]],[11,"get_type_id","","",72,[[["self"]],["typeid"]]],[11,"as_fail","","",72,[[["self"]],["fail"]]],[11,"try_into","","",33,[[["self"]],["result"]]],[11,"from","","",33,[[["t"]],["t"]]],[11,"into","","",33,[[["self"]],["u"]]],[11,"try_from","","",33,[[["u"]],["result"]]],[11,"borrow","","",33,[[["self"]],["t"]]],[11,"borrow_mut","","",33,[[["self"]],["t"]]],[11,"try_into","","",33,[[["self"]],["result"]]],[11,"get_type_id","","",33,[[["self"]],["typeid"]]],[11,"poll_data","","",33,[[["self"]],["result",["async"]]]],[11,"size_hint","","",33,[[["self"]],["sizehint"]]],[11,"poll_trailers","","",33,[[["self"]],["result",["async"]]]],[11,"is_end_stream","","",33,[[["self"]],["bool"]]],[11,"try_into","","",73,[[["self"]],["result"]]],[11,"from","","",73,[[["t"]],["t"]]],[11,"into","","",73,[[["self"]],["u"]]],[11,"try_from","","",73,[[["u"]],["result"]]],[11,"borrow","","",73,[[["self"]],["t"]]],[11,"borrow_mut","","",73,[[["self"]],["t"]]],[11,"try_into","","",73,[[["self"]],["result"]]],[11,"get_type_id","","",73,[[["self"]],["typeid"]]],[11,"into_future","","",73,[[["self"]],["f"]]],[11,"run","","",73,N],[11,"run","","",73,N],[11,"try_into","tsukuyomi::input::header","",74,[[["self"]],["result"]]],[11,"from","","",74,[[["t"]],["t"]]],[11,"into","","",74,[[["self"]],["u"]]],[11,"try_from","","",74,[[["u"]],["result"]]],[11,"borrow","","",74,[[["self"]],["t"]]],[11,"borrow_mut","","",74,[[["self"]],["t"]]],[11,"try_into","","",74,[[["self"]],["result"]]],[11,"get_type_id","","",74,[[["self"]],["typeid"]]],[11,"try_into","tsukuyomi::input::localmap","",75,[[["self"]],["result"]]],[11,"from","","",75,[[["t"]],["t"]]],[11,"into","","",75,[[["self"]],["u"]]],[11,"try_from","","",75,[[["u"]],["result"]]],[11,"borrow","","",75,[[["self"]],["t"]]],[11,"borrow_mut","","",75,[[["self"]],["t"]]],[11,"try_into","","",75,[[["self"]],["result"]]],[11,"get_type_id","","",75,[[["self"]],["typeid"]]],[11,"try_into","","",38,[[["self"]],["result"]]],[11,"from","","",38,[[["t"]],["t"]]],[11,"into","","",38,[[["self"]],["u"]]],[11,"try_from","","",38,[[["u"]],["result"]]],[11,"borrow","","",38,[[["self"]],["t"]]],[11,"borrow_mut","","",38,[[["self"]],["t"]]],[11,"try_into","","",38,[[["self"]],["result"]]],[11,"get_type_id","","",38,[[["self"]],["typeid"]]],[11,"try_into","","",39,[[["self"]],["result"]]],[11,"from","","",39,[[["t"]],["t"]]],[11,"into","","",39,[[["self"]],["u"]]],[11,"try_from","","",39,[[["u"]],["result"]]],[11,"borrow","","",39,[[["self"]],["t"]]],[11,"borrow_mut","","",39,[[["self"]],["t"]]],[11,"try_into","","",39,[[["self"]],["result"]]],[11,"get_type_id","","",39,[[["self"]],["typeid"]]],[11,"try_into","","",40,[[["self"]],["result"]]],[11,"from","","",40,[[["t"]],["t"]]],[11,"into","","",40,[[["self"]],["u"]]],[11,"try_from","","",40,[[["u"]],["result"]]],[11,"borrow","","",40,[[["self"]],["t"]]],[11,"borrow_mut","","",40,[[["self"]],["t"]]],[11,"try_into","","",40,[[["self"]],["result"]]],[11,"get_type_id","","",40,[[["self"]],["typeid"]]],[11,"try_into","","",36,[[["self"]],["result"]]],[11,"from","","",36,[[["t"]],["t"]]],[11,"into","","",36,[[["self"]],["u"]]],[11,"try_from","","",36,[[["u"]],["result"]]],[11,"borrow","","",36,[[["self"]],["t"]]],[11,"borrow_mut","","",36,[[["self"]],["t"]]],[11,"try_into","","",36,[[["self"]],["result"]]],[11,"get_type_id","","",36,[[["self"]],["typeid"]]],[11,"try_into","tsukuyomi::input::param","",42,[[["self"]],["result"]]],[11,"from","","",42,[[["t"]],["t"]]],[11,"into","","",42,[[["self"]],["u"]]],[11,"try_from","","",42,[[["u"]],["result"]]],[11,"borrow","","",42,[[["self"]],["t"]]],[11,"borrow_mut","","",42,[[["self"]],["t"]]],[11,"try_into","","",42,[[["self"]],["result"]]],[11,"get_type_id","","",42,[[["self"]],["typeid"]]],[11,"borrow","","",43,[[["self"]],["t"]]],[11,"borrow_mut","","",43,[[["self"]],["t"]]],[11,"get_type_id","","",43,[[["self"]],["typeid"]]],[11,"try_into","tsukuyomi::output","",76,[[["self"]],["result"]]],[11,"respond","","",76,N],[11,"from","","",76,[[["t"]],["t"]]],[11,"into","","",76,[[["self"]],["u"]]],[11,"to_owned","","",76,[[["self"]],["t"]]],[11,"clone_into","","",76,N],[11,"try_from","","",76,[[["u"]],["result"]]],[11,"borrow","","",76,[[["self"]],["t"]]],[11,"borrow_mut","","",76,[[["self"]],["t"]]],[11,"try_into","","",76,[[["self"]],["result"]]],[11,"get_type_id","","",76,[[["self"]],["typeid"]]],[11,"try_into","","",77,[[["self"]],["result"]]],[11,"respond","","",77,N],[11,"from","","",77,[[["t"]],["t"]]],[11,"into","","",77,[[["self"]],["u"]]],[11,"to_owned","","",77,[[["self"]],["t"]]],[11,"clone_into","","",77,N],[11,"try_from","","",77,[[["u"]],["result"]]],[11,"borrow","","",77,[[["self"]],["t"]]],[11,"borrow_mut","","",77,[[["self"]],["t"]]],[11,"try_into","","",77,[[["self"]],["result"]]],[11,"get_type_id","","",77,[[["self"]],["typeid"]]],[11,"try_into","","",78,[[["self"]],["result"]]],[11,"respond","","",78,N],[11,"from","","",78,[[["t"]],["t"]]],[11,"into","","",78,[[["self"]],["u"]]],[11,"try_from","","",78,[[["u"]],["result"]]],[11,"borrow","","",78,[[["self"]],["t"]]],[11,"borrow_mut","","",78,[[["self"]],["t"]]],[11,"try_into","","",78,[[["self"]],["result"]]],[11,"get_type_id","","",78,[[["self"]],["typeid"]]],[11,"try_into","","",79,[[["self"]],["result"]]],[11,"from","","",79,[[["t"]],["t"]]],[11,"into","","",79,[[["self"]],["u"]]],[11,"try_from","","",79,[[["u"]],["result"]]],[11,"borrow","","",79,[[["self"]],["t"]]],[11,"borrow_mut","","",79,[[["self"]],["t"]]],[11,"try_into","","",79,[[["self"]],["result"]]],[11,"get_type_id","","",79,[[["self"]],["typeid"]]],[11,"try_into","","",80,[[["self"]],["result"]]],[11,"from","","",80,[[["t"]],["t"]]],[11,"into","","",80,[[["self"]],["u"]]],[11,"try_from","","",80,[[["u"]],["result"]]],[11,"borrow","","",80,[[["self"]],["t"]]],[11,"borrow_mut","","",80,[[["self"]],["t"]]],[11,"try_into","","",80,[[["self"]],["result"]]],[11,"get_type_id","","",80,[[["self"]],["typeid"]]],[11,"try_into","","",81,[[["self"]],["result"]]],[11,"from","","",81,[[["t"]],["t"]]],[11,"into","","",81,[[["self"]],["u"]]],[11,"try_from","","",81,[[["u"]],["result"]]],[11,"borrow","","",81,[[["self"]],["t"]]],[11,"borrow_mut","","",81,[[["self"]],["t"]]],[11,"try_into","","",81,[[["self"]],["result"]]],[11,"get_type_id","","",81,[[["self"]],["typeid"]]],[11,"try_into","tsukuyomi::server","",48,[[["self"]],["result"]]],[11,"from","","",48,[[["t"]],["t"]]],[11,"into","","",48,[[["self"]],["u"]]],[11,"try_from","","",48,[[["u"]],["result"]]],[11,"borrow","","",48,[[["self"]],["t"]]],[11,"borrow_mut","","",48,[[["self"]],["t"]]],[11,"try_into","","",48,[[["self"]],["result"]]],[11,"get_type_id","","",48,[[["self"]],["typeid"]]],[11,"try_into","tsukuyomi::test","",82,[[["self"]],["result"]]],[11,"from","","",82,[[["t"]],["t"]]],[11,"into","","",82,[[["self"]],["u"]]],[11,"try_from","","",82,[[["u"]],["result"]]],[11,"borrow","","",82,[[["self"]],["t"]]],[11,"borrow_mut","","",82,[[["self"]],["t"]]],[11,"try_into","","",82,[[["self"]],["result"]]],[11,"get_type_id","","",82,[[["self"]],["typeid"]]],[11,"try_into","","",51,[[["self"]],["result"]]],[11,"from","","",51,[[["t"]],["t"]]],[11,"into","","",51,[[["self"]],["u"]]],[11,"try_from","","",51,[[["u"]],["result"]]],[11,"borrow","","",51,[[["self"]],["t"]]],[11,"borrow_mut","","",51,[[["self"]],["t"]]],[11,"try_into","","",51,[[["self"]],["result"]]],[11,"get_type_id","","",51,[[["self"]],["typeid"]]],[11,"try_into","","",52,[[["self"]],["result"]]],[11,"from","","",52,[[["t"]],["t"]]],[11,"into","","",52,[[["self"]],["u"]]],[11,"try_from","","",52,[[["u"]],["result"]]],[11,"borrow","","",52,[[["self"]],["t"]]],[11,"borrow_mut","","",52,[[["self"]],["t"]]],[11,"try_into","","",52,[[["self"]],["result"]]],[11,"get_type_id","","",52,[[["self"]],["typeid"]]],[11,"try_into","","",53,[[["self"]],["result"]]],[11,"from","","",53,[[["t"]],["t"]]],[11,"into","","",53,[[["self"]],["u"]]],[11,"try_from","","",53,[[["u"]],["result"]]],[11,"borrow","","",53,[[["self"]],["t"]]],[11,"borrow_mut","","",53,[[["self"]],["t"]]],[11,"try_into","","",53,[[["self"]],["result"]]],[11,"get_type_id","","",53,[[["self"]],["typeid"]]],[11,"try_into","","",83,[[["self"]],["result"]]],[11,"to_string","","",83,[[["self"]],["string"]]],[11,"from","","",83,[[["t"]],["t"]]],[11,"into","","",83,[[["self"]],["u"]]],[11,"try_from","","",83,[[["u"]],["result"]]],[11,"borrow","","",83,[[["self"]],["t"]]],[11,"borrow_mut","","",83,[[["self"]],["t"]]],[11,"try_into","","",83,[[["self"]],["result"]]],[11,"get_type_id","","",83,[[["self"]],["typeid"]]],[11,"as_fail","","",83,[[["self"]],["fail"]]],[11,"try_into","","",49,[[["self"]],["result"]]],[11,"from","","",49,[[["t"]],["t"]]],[11,"into","","",49,[[["self"]],["u"]]],[11,"try_from","","",49,[[["u"]],["result"]]],[11,"borrow","","",49,[[["self"]],["t"]]],[11,"borrow_mut","","",49,[[["self"]],["t"]]],[11,"try_into","","",49,[[["self"]],["result"]]],[11,"get_type_id","","",49,[[["self"]],["typeid"]]],[11,"try_into","tsukuyomi::test::header","",84,[[["self"]],["result"]]],[11,"from","","",84,[[["t"]],["t"]]],[11,"into","","",84,[[["self"]],["u"]]],[11,"try_from","","",84,[[["u"]],["result"]]],[11,"borrow","","",84,[[["self"]],["t"]]],[11,"borrow_mut","","",84,[[["self"]],["t"]]],[11,"try_into","","",84,[[["self"]],["result"]]],[11,"get_type_id","","",84,[[["self"]],["typeid"]]],[11,"try_into","","",85,[[["self"]],["result"]]],[11,"from","","",85,[[["t"]],["t"]]],[11,"into","","",85,[[["self"]],["u"]]],[11,"try_from","","",85,[[["u"]],["result"]]],[11,"borrow","","",85,[[["self"]],["t"]]],[11,"borrow_mut","","",85,[[["self"]],["t"]]],[11,"try_into","","",85,[[["self"]],["result"]]],[11,"get_type_id","","",85,[[["self"]],["typeid"]]],[11,"try_into","tsukuyomi::test::body","",86,[[["self"]],["result"]]],[11,"from","","",86,[[["t"]],["t"]]],[11,"into","","",86,[[["self"]],["u"]]],[11,"try_from","","",86,[[["u"]],["result"]]],[11,"borrow","","",86,[[["self"]],["t"]]],[11,"borrow_mut","","",86,[[["self"]],["t"]]],[11,"try_into","","",86,[[["self"]],["result"]]],[11,"get_type_id","","",86,[[["self"]],["typeid"]]],[11,"try_into","tsukuyomi::upgrade","",87,[[["self"]],["result"]]],[11,"from","","",87,[[["t"]],["t"]]],[11,"into","","",87,[[["self"]],["u"]]],[11,"try_from","","",87,[[["u"]],["result"]]],[11,"borrow","","",87,[[["self"]],["t"]]],[11,"borrow_mut","","",87,[[["self"]],["t"]]],[11,"try_into","","",87,[[["self"]],["result"]]],[11,"get_type_id","","",87,[[["self"]],["typeid"]]],[11,"try_into","","",55,[[["self"]],["result"]]],[11,"from","","",55,[[["t"]],["t"]]],[11,"into","","",55,[[["self"]],["u"]]],[11,"try_from","","",55,[[["u"]],["result"]]],[11,"borrow","","",55,[[["self"]],["t"]]],[11,"borrow_mut","","",55,[[["self"]],["t"]]],[11,"try_into","","",55,[[["self"]],["result"]]],[11,"get_type_id","","",55,[[["self"]],["typeid"]]],[11,"try_from","tsukuyomi::handler::metadata","",57,[[["self"]],["result"]]],[11,"try_from","","",57,[[["str"]],["result"]]],[11,"try_from","","",57,[[["string"]],["result"]]],[11,"try_from","","",29,[[["self"]],["result"]]],[11,"try_from","","",29,[[["method"]],["result"]]],[11,"try_from","","",29,[[["vec"]],["result"]]],[11,"try_from","","",29,[[["str"]],["result"]]],[11,"into_path","tsukuyomi::app::path","",12,[[["self"]],["path"]]],[11,"apply","tsukuyomi::util","",5,[[["self"],["t"],["applycontext"]],["applyresult"]]],[11,"allowed_methods","","",5,[[["self"]],["allowedmethods"]]],[11,"status_code","","",56,[[["self"]],["statuscode"]]],[11,"status_code","tsukuyomi::error","",19,[[["self"]],["statuscode"]]],[11,"status_code","tsukuyomi::input::body","",72,[[["self"]],["statuscode"]]],[11,"extract","tsukuyomi::util","",5,N],[11,"extract","tsukuyomi::extractor::ext","",66,N],[11,"extract","","",63,N],[11,"extract","","",67,N],[11,"extract","","",64,N],[11,"extract","","",65,N],[11,"poll_ready","tsukuyomi::fs","",69,[[["self"],["input"]],["poll"]]],[11,"poll_ready","tsukuyomi::util","",2,[[["self"],["input"]],["poll"]]],[11,"poll_ready","tsukuyomi::future","",70,[[["self"],["input"]],["poll"]]],[11,"poll_ready","","",26,[[["self"],["input"]],["poll"]]],[11,"handle","tsukuyomi::fs","",69,N],[11,"metadata","","",69,[[["self"]],["metadata"]]],[11,"modify","tsukuyomi::util","",5,N],[11,"respond","tsukuyomi::fs","",24,N],[11,"respond","tsukuyomi::util","",2,N],[11,"respond","tsukuyomi::output","",76,N],[11,"respond","","",77,N],[11,"respond","","",78,N],[11,"respond","","",79,N],[11,"respond","","",80,N],[11,"respond","","",81,N],[11,"assert","tsukuyomi::test::header","",84,[[["self"],["testresponse"]],["result",["assertionerrorkind"]]]],[11,"assert","","",85,[[["self"],["testresponse"]],["result",["assertionerrorkind"]]]],[11,"assert","tsukuyomi::test::body","",86,[[["self"],["testresponse"]],["result",["assertionerrorkind"]]]],[11,"poll_upgrade","tsukuyomi::upgrade","",87,[[["self"],["upgraded"]],["poll",["error"]]]],[11,"close","","",87,[[["self"]]]],[11,"poll_upgrade","tsukuyomi::util","",2,[[["self"],["upgraded"]],["poll",["error"]]]],[11,"close","","",2,[[["self"]]]],[11,"eq","","",2,[[["self"],["either"]],["bool"]]],[11,"ne","","",2,[[["self"],["either"]],["bool"]]],[11,"eq","tsukuyomi::handler::metadata","",57,[[["self"],["self"]],["bool"]]],[11,"eq","","",57,[[["self"],["str"]],["bool"]]],[11,"eq","","",57,[[["self"],["str"]],["bool"]]],[11,"as_ref","","",57,[[["self"]],["self"]]],[11,"as_ref","","",57,[[["self"]],["str"]]],[11,"as_ref","tsukuyomi::fs","",68,[[["self"]],["path"]]],[11,"as_ref","tsukuyomi::input::body","",71,N],[11,"into_iter","tsukuyomi::handler::metadata","",29,N],[11,"default","","",57,[[],["self"]]],[11,"default","tsukuyomi::fs","",23,[[],["openconfig"]]],[11,"default","tsukuyomi::handler::metadata","",29,[[],["allowedmethods"]]],[11,"default","tsukuyomi::input::localmap","",38,[[],["localmap"]]],[11,"clone","tsukuyomi::util","",5,[[["self"]],["chain"]]],[11,"clone","","",2,[[["self"]],["either"]]],[11,"clone","tsukuyomi::handler::metadata","",57,[[["self"]],["uri"]]],[11,"clone","tsukuyomi::app","",8,[[["self"]],["self"]]],[11,"clone","tsukuyomi::fs","",23,[[["self"]],["openconfig"]]],[11,"clone","","",24,[[["self"]],["namedfile"]]],[11,"clone","","",68,[[["self"]],["arcpath"]]],[11,"clone","","",69,[[["self"]],["servefile"]]],[11,"clone","tsukuyomi::handler::metadata","",29,[[["self"]],["allowedmethods"]]],[11,"clone","","",30,[[["self"]],["metadata"]]],[11,"clone","tsukuyomi::output","",76,[[["self"]],["responderfn"]]],[11,"clone","","",77,[[["self"]],["oneshot"]]],[11,"extend","tsukuyomi::handler::metadata","",29,[[["self"],["i"]]]],[11,"from","tsukuyomi::app::concurrency::current_thread","",62,[[["h"]],["self"]]],[11,"from","tsukuyomi::app::concurrency","",60,[[["h"]],["self"]]],[11,"from","tsukuyomi::app::config","",7,[[["never"]],["self"]]],[11,"from","tsukuyomi::error","",20,[[["applyerror"]],["self"]]],[11,"from","","",20,[[["e"]],["self"]]],[11,"from","","",20,[[["statuscode"]],["self"]]],[11,"from","","",20,[[["box",["error"]]],["self"]]],[11,"from","tsukuyomi::fs","",68,[[["pathbuf"]],["self"]]],[11,"from","tsukuyomi::future","",70,[[["f"]],["self"]]],[11,"from","tsukuyomi::handler::metadata","",29,[[["method"]],["self"]]],[11,"from","tsukuyomi::input::body","",33,[[["h1body"]],["self"]]],[11,"from","","",33,[[["h2body"]],["self"]]],[11,"fmt","tsukuyomi::util","",56,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","tsukuyomi::handler::metadata","",57,[[["self"],["formatter"]],["result"]]],[11,"fmt","tsukuyomi::app::concurrency::current_thread","",62,[[["self"],["formatter"]],["result"]]],[11,"fmt","tsukuyomi::app::concurrency","",60,[[["self"],["formatter"]],["result"]]],[11,"fmt","tsukuyomi::app::config","",7,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",9,[[["self"],["formatter"]],["result"]]],[11,"fmt","tsukuyomi::app::path","",12,[[["self"],["formatter"]],["result"]]],[11,"fmt","tsukuyomi::app","",13,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",8,[[["self"],["formatter"]],["result"]]],[11,"fmt","tsukuyomi::endpoint::builder","",14,[[["self"],["formatter"]],["result"]]],[11,"fmt","tsukuyomi::endpoint","",16,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",17,[[["self"],["formatter"]],["result"]]],[11,"fmt","tsukuyomi::error","",19,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",20,[[["self"],["formatter"]],["result"]]],[11,"fmt","tsukuyomi::extractor::ext","",66,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",63,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",67,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",64,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",65,[[["self"],["formatter"]],["result"]]],[11,"fmt","tsukuyomi::fs","",23,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",24,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",68,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",69,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",25,[[["self"],["formatter"]],["result"]]],[11,"fmt","tsukuyomi::future","",70,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",26,[[["self"],["formatter"]],["result"]]],[11,"fmt","tsukuyomi::handler::metadata","",29,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",30,[[["self"],["formatter"]],["result"]]],[11,"fmt","tsukuyomi::input::body","",71,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",72,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",33,[[["self"],["formatter"]],["result"]]],[11,"fmt","tsukuyomi::input::header","",74,[[["self"],["formatter"]],["result"]]],[11,"fmt","tsukuyomi::input::localmap","",75,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",38,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",36,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",39,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",40,[[["self"],["formatter"]],["result"]]],[11,"fmt","tsukuyomi::input::param","",42,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",43,[[["self"],["formatter"]],["result"]]],[11,"fmt","tsukuyomi::input","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",44,[[["self"],["formatter"]],["result"]]],[11,"fmt","tsukuyomi::output","",76,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",77,[[["self"],["formatter"]],["result"]]],[11,"fmt","tsukuyomi::test","",82,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",83,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",49,[[["self"],["formatter"]],["result"]]],[11,"fmt","tsukuyomi::upgrade","",55,[[["self"],["formatter"]],["result"]]],[11,"fmt","tsukuyomi::util","",56,[[["self"],["formatter"]],["result"]]],[11,"fmt","tsukuyomi::handler::metadata","",57,[[["self"],["formatter"]],["result"]]],[11,"fmt","tsukuyomi::app::config","",7,[[["self"],["formatter"]],["result"]]],[11,"fmt","tsukuyomi::error","",19,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",20,[[["self"],["formatter"]],["result"]]],[11,"fmt","tsukuyomi::input::body","",72,[[["self"],["formatter"]],["result"]]],[11,"fmt","tsukuyomi::test","",83,[[["self"],["formatter"]],["result"]]],[11,"hash","tsukuyomi::handler::metadata","",57,[[["self"],["h"]]]],[11,"deref","tsukuyomi::fs","",68,N],[11,"deref","tsukuyomi::input::body","",72,N],[11,"deref","tsukuyomi::test","",53,N],[11,"index","tsukuyomi::input::param","",42,N],[11,"index","","",42,N],[11,"from_iter","tsukuyomi::handler::metadata","",29,[[["t"]],["self"]]],[11,"from_str","","",57,[[["str"]],["result"]]],[11,"read","tsukuyomi::upgrade","",55,N],[11,"write","","",55,N],[11,"flush","","",55,[[["self"]],["result"]]],[11,"description","tsukuyomi::util","",56,[[["self"]],["str"]]],[11,"cause","","",56,[[["self"]],["option",["stderror"]]]],[11,"source","tsukuyomi::app::config","",7,[[["self"]],["option",["error"]]]],[11,"source","tsukuyomi::input::body","",72,[[["self"]],["option",["error"]]]],[11,"as_fail","tsukuyomi::error","",20,[[["self"]],["fail"]]],[11,"name","","",19,[[["self"]],["option",["str"]]]],[11,"cause","","",19,[[["self"]],["option",["fail"]]]],[11,"backtrace","","",19,[[["self"]],["option",["backtrace"]]]],[11,"poll","tsukuyomi::input::body","",73,[[["self"]],["poll"]]],[11,"remaining","","",71,[[["self"]],["usize"]]],[11,"bytes","","",71,N],[11,"advance","","",71,[[["self"],["usize"]]]],[11,"shutdown","tsukuyomi::upgrade","",55,[[["self"]],["poll",["error"]]]],[11,"poll_data","tsukuyomi::app","",58,[[["self"]],["poll",["option"]]]],[11,"poll_trailers","","",58,[[["self"]],["poll",["option"]]]],[11,"size_hint","","",58,[[["self"]],["sizehint"]]],[11,"is_end_stream","","",58,[[["self"]],["bool"]]],[11,"content_length","","",58,[[["self"]],["option",["u64"]]]],[11,"poll_data","tsukuyomi::input::body","",33,[[["self"]],["poll",["option"]]]],[11,"prepare_uninitialized_buffer","tsukuyomi::upgrade","",55,N],[11,"upgrade","tsukuyomi::app","",58,[[["self"],["i"]],["result"]]],[11,"poll_ready","","",13,[[["self"]],["poll"]]],[11,"call","","",13,N],[11,"into_response","tsukuyomi::error","",20,[[["self"]],["response"]]],[11,"root","tsukuyomi::handler::metadata","",57,[[],["self"]]],[11,"parse","","",57,[[["str"]],["result",["error"]]]],[11,"as_str","","",57,[[["self"]],["str"]]],[11,"capture_names","","",57,[[["self"]],["option",["capturenames"]]]],[11,"join","","",57,N]],"paths":[[8,"IntoResponse"],[3,"Input"],[4,"Either"],[8,"TryFrom"],[8,"TryInto"],[3,"Chain"],[8,"Concurrency"],[3,"Error"],[3,"App"],[3,"Scope"],[8,"PathExtractor"],[8,"IntoPath"],[3,"Path"],[3,"AppService"],[3,"Builder"],[8,"Endpoint"],[3,"ApplyContext"],[3,"ApplyError"],[8,"HttpError"],[3,"BoxedStdCompat"],[3,"Error"],[8,"ExtractorExt"],[8,"Extractor"],[3,"OpenConfig"],[3,"NamedFile"],[3,"Staticfiles"],[4,"MaybeDone"],[8,"TryFuture"],[8,"Futures01CompatExt"],[3,"AllowedMethods"],[3,"Metadata"],[8,"Handler"],[8,"ModifyHandler"],[3,"RequestBody"],[8,"FromHeaderValue"],[8,"HeaderField"],[4,"Entry"],[8,"LocalData"],[3,"LocalMap"],[3,"OccupiedEntry"],[3,"VacantEntry"],[8,"FromPercentEncoded"],[3,"Params"],[3,"PercentEncoded"],[3,"Cookies"],[8,"Responder"],[8,"Respond"],[8,"Preset"],[3,"Server"],[4,"AssertionErrorKind"],[8,"Assertion"],[3,"TestServer"],[3,"TestClient"],[3,"TestResponse"],[8,"Upgrade"],[3,"Upgraded"],[4,"Never"],[3,"Uri"],[3,"AppBody"],[3,"DefaultConcurrency"],[3,"BoxedHandler"],[3,"CurrentThread"],[3,"BoxedHandler"],[3,"Fallible"],[3,"Map"],[3,"MapErr"],[3,"Optional"],[3,"Or"],[3,"ArcPath"],[3,"ServeFile"],[3,"Compat01"],[3,"Chunk"],[3,"Error"],[3,"ReadAll"],[3,"ContentType"],[3,"LocalKey"],[3,"ResponderFn"],[3,"Oneshot"],[3,"Rendered"],[3,"Json"],[3,"JsonPretty"],[3,"Html"],[3,"Location"],[3,"AssertionError"],[3,"EqHeader"],[3,"NotExists"],[3,"EqBody"],[3,"NeverUpgrade"]]};
searchIndex["tsukuyomi_askama"]={"doc":"Askama integration for Tsukuyomi.","items":[[3,"Askama","tsukuyomi_askama","An implementor of `Preset` for deriving the implementation…",N,N],[3,"Renderer","","",N,N],[5,"renderer","","Creates a `ModifyHandler` that renders the outputs of…",N,[[],["renderer"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"default","","",1,[[],["renderer"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"modify","","",1,N],[11,"respond","","",0,[[["t"]],["askamarespond"]]]],"paths":[[3,"Askama"],[3,"Renderer"]]};
searchIndex["tsukuyomi_cors"]={"doc":"CORS support for Tsukuyomi.","items":[[3,"Builder","tsukuyomi_cors","A builder of `CORS`.",N,N],[3,"CORS","","The main type for providing the CORS filtering.",N,N],[3,"CORSError","","",N,N],[4,"CORSErrorKind","","",N,N],[13,"InvalidOrigin","","",0,N],[13,"DisallowedOrigin","","",0,N],[13,"InvalidRequestMethod","","",0,N],[13,"DisallowedRequestMethod","","",0,N],[13,"InvalidRequestHeaders","","",0,N],[13,"DisallowedRequestHeaders","","",0,N],[11,"new","","Creates a `Builder` with the default configuration.",1,[[],["self"]]],[11,"allow_origin","","",1,[[["self"],["u"]],["result"]]],[11,"allow_origins","","",1,N],[11,"allow_method","","",1,[[["self"],["m"]],["result"]]],[11,"allow_methods","","",1,N],[11,"allow_header","","",1,[[["self"],["h"]],["result"]]],[11,"allow_headers","","",1,N],[11,"allow_credentials","","",1,[[["self"],["bool"]],["self"]]],[11,"max_age","","",1,[[["self"],["duration"]],["self"]]],[11,"build","","",1,[[["self"]],["cors"]]],[11,"new","","Create a new `CORS` with the default configuration.",2,[[],["self"]]],[11,"builder","","Create a builder of this type.",2,[[],["builder"]]],[11,"kind","","",3,[[["self"]],["corserrorkind"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,N],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"to_string","","",3,[[["self"]],["string"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"as_fail","","",3,[[["self"]],["fail"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"as_fail","","",0,[[["self"]],["fail"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"default","","",1,[[],["builder"]]],[11,"default","","",2,[[],["self"]]],[11,"clone","","",2,[[["self"]],["cors"]]],[11,"from","","",3,[[["corserrorkind"]],["self"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"name","","",3,[[["self"]],["option",["str"]]]],[11,"cause","","",3,[[["self"]],["option",["fail"]]]],[11,"backtrace","","",3,[[["self"]],["option",["backtrace"]]]],[11,"name","","",0,[[["self"]],["option",["str"]]]],[11,"cause","","",0,[[["self"]],["option",["fail"]]]],[11,"backtrace","","",0,[[["self"]],["option",["backtrace"]]]],[11,"apply","","",2,N],[11,"allowed_methods","","",2,[[["self"]],["allowedmethods"]]],[11,"modify","","",2,N],[11,"status_code","","",3,[[["self"]],["statuscode"]]]],"paths":[[4,"CORSErrorKind"],[3,"Builder"],[3,"CORS"],[3,"CORSError"]]};
searchIndex["tsukuyomi_juniper"]={"doc":"Components for integrating GraphQL endpoints into Tsukuyomi.","items":[[3,"CaptureErrors","tsukuyomi_juniper","",N,N],[3,"GraphQLRequest","","The type representing a GraphQL request from the client.",N,N],[3,"GraphQLResponse","","The type representing the result from the executing a…",N,N],[5,"capture_errors","","Creates a `ModifyHandler` that catches the all kind of…",N,[[],["captureerrors"]]],[5,"graphiql_source","","Creates a handler function which returns a GraphiQL source.",N,N],[5,"request","","Create an `Extractor` that parses the incoming request as…",N,N],[11,"execute","","Creates a `Responder` that executes this request using the…",0,[[["self"],["t"],["ctxt"]],["graphqlresponse"]]],[8,"Schema","","A marker trait representing a root node of GraphQL schema.",N,N],[16,"Query","","",1,N],[16,"QueryInfo","","",1,N],[16,"Mutation","","",1,N],[16,"MutationInfo","","",1,N],[16,"Context","","",1,N],[10,"as_root_node","","",1,[[["self"]],["rootnode"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"respond","","",3,N],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"deserialize","","",0,[[["__d"]],["result"]]],[11,"respond","","",3,N],[11,"modify","","",2,N]],"paths":[[3,"GraphQLRequest"],[8,"Schema"],[3,"CaptureErrors"],[3,"GraphQLResponse"]]};
searchIndex["tsukuyomi_macros"]={"doc":"The procedural macros for Tsukuyomi.","items":[[24,"Responder","tsukuyomi_macros","A procedural macro for deriving the implementation of…",N,N],[14,"path_impl","","",N,N]],"paths":[]};
searchIndex["tsukuyomi_tungstenite"]={"doc":"The basic WebSocket support for Tsukuyomi, powered by…","items":[[3,"StreamError","tsukuyomi_tungstenite","",N,N],[3,"WebSocketStream","","",N,N],[3,"Ws","","",N,N],[5,"ws","","",N,N],[11,"config","","Sets the configuration of upgraded WebSocket connection.",0,[[["self"],["websocketconfig"]],["self"]]],[11,"finish","","",0,[[["self"],["f"]],["wsresponder"]]],[11,"to_string","","",1,[[["self"]],["string"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"as_fail","","",1,[[["self"]],["fail"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"source","","",1,[[["self"]],["option",["error"]]]],[11,"poll","","",2,[[["self"]],["poll",["option"]]]],[11,"start_send","","",2,N],[11,"poll_complete","","",2,[[["self"]],["poll"]]],[11,"close","","",2,[[["self"]],["poll"]]]],"paths":[[3,"Ws"],[3,"StreamError"],[3,"WebSocketStream"]]};
searchIndex["tungstenite"]={"doc":"Lightweight, flexible WebSockets for Rust.","items":[[4,"Message","tungstenite","An enum representing the various forms of a WebSocket…",N,N],[13,"Text","","A text WebSocket message",0,N],[13,"Binary","","A binary WebSocket message",0,N],[13,"Ping","","A ping message with the specified payload",0,N],[13,"Pong","","A pong message with the specified payload",0,N],[0,"error","","Error handling.",N,N],[4,"Error","tungstenite::error","Possible WebSocket errors",N,N],[13,"ConnectionClosed","","WebSocket connection closed (normally)",1,N],[13,"Io","","Input-output error",1,N],[13,"Capacity","","Buffer capacity exhausted",1,N],[13,"Protocol","","Protocol violation",1,N],[13,"SendQueueFull","","Message send queue full",1,N],[13,"Utf8","","UTF coding error",1,N],[13,"Url","","Invlid URL.",1,N],[13,"Http","","HTTP error.",1,N],[6,"Result","","Result type of all Tungstenite library calls.",N,N],[0,"protocol","tungstenite","Generic WebSocket message stream.",N,N],[3,"CloseFrame","tungstenite::protocol","A struct representing the close command.",N,N],[12,"code","","The reason as a code.",2,N],[12,"reason","","The reason as text string.",2,N],[3,"WebSocketConfig","","The configuration for WebSocket connection.",N,N],[12,"max_send_queue","","The size of the send queue. You can use it to turn on/off…",3,N],[12,"max_message_size","","The maximum size of a message. `None` means no size limit.…",3,N],[12,"max_frame_size","","The maximum size of a single message frame. `None` means…",3,N],[3,"WebSocket","","WebSocket input-output stream.",N,N],[4,"Message","","An enum representing the various forms of a WebSocket…",N,N],[13,"Text","","A text WebSocket message",0,N],[13,"Binary","","A binary WebSocket message",0,N],[13,"Ping","","A ping message with the specified payload",0,N],[13,"Pong","","A pong message with the specified payload",0,N],[4,"Role","","Indicates a Client or Server role of the websocket",N,N],[13,"Server","","This socket is a server",4,N],[13,"Client","","This socket is a client",4,N],[0,"frame","","Utilities to work with raw WebSocket frames.",N,N],[3,"Frame","tungstenite::protocol::frame","A struct representing a WebSocket frame.",N,N],[3,"FrameHeader","","A struct representing a WebSocket frame header.",N,N],[12,"is_final","","Indicates that the frame is the last one of a possibly…",5,N],[12,"rsv1","","Reserved for protocol extensions.",5,N],[12,"rsv2","","Reserved for protocol extensions.",5,N],[12,"rsv3","","Reserved for protocol extensions.",5,N],[12,"opcode","","WebSocket protocol opcode.",5,N],[3,"CloseFrame","","A struct representing the close command.",N,N],[12,"code","","The reason as a code.",2,N],[12,"reason","","The reason as text string.",2,N],[3,"FrameSocket","","A reader and writer for WebSocket frames.",N,N],[0,"coding","","Various codes defined in RFC 6455.",N,N],[4,"OpCode","tungstenite::protocol::frame::coding","WebSocket message opcode as in RFC 6455.",N,N],[13,"Data","","Data (text or binary).",6,N],[13,"Control","","Control message (close, ping, pong).",6,N],[4,"Data","","Data opcodes as in RFC 6455",N,N],[13,"Continue","","0x0 denotes a continuation frame",7,N],[13,"Text","","0x1 denotes a text frame",7,N],[13,"Binary","","0x2 denotes a binary frame",7,N],[13,"Reserved","","0x3-7 are reserved for further non-control frames",7,N],[4,"Control","","Control opcodes as in RFC 6455",N,N],[13,"Close","","0x8 denotes a connection close",8,N],[13,"Ping","","0x9 denotes a ping",8,N],[13,"Pong","","0xa denotes a pong",8,N],[13,"Reserved","","0xb-f are reserved for further control frames",8,N],[4,"CloseCode","","Status code used to indicate why an endpoint is closing…",N,N],[13,"Normal","","Indicates a normal closure, meaning that the purpose for…",9,N],[13,"Away","","Indicates that an endpoint is \"going away\", such as a…",9,N],[13,"Protocol","","Indicates that an endpoint is terminating the connection…",9,N],[13,"Unsupported","","Indicates that an endpoint is terminating the connection…",9,N],[13,"Status","","Indicates that no status code was included in a closing…",9,N],[13,"Abnormal","","Indicates an abnormal closure. If the abnormal closure was…",9,N],[13,"Invalid","","Indicates that an endpoint is terminating the connection…",9,N],[13,"Policy","","Indicates that an endpoint is terminating the connection…",9,N],[13,"Size","","Indicates that an endpoint is terminating the connection…",9,N],[13,"Extension","","Indicates that an endpoint (client) is terminating the…",9,N],[13,"Error","","Indicates that a server is terminating the connection…",9,N],[13,"Restart","","Indicates that the server is restarting. A client may…",9,N],[13,"Again","","Indicates that the server is overloaded and the client…",9,N],[11,"is_allowed","","Check if this CloseCode is allowed.",9,[[["self"]],["bool"]]],[11,"into_owned","tungstenite::protocol","Convert into a owned string.",2,[[["self"]],["closeframe"]]],[11,"parse","tungstenite::protocol::frame","Parse a header from an input stream. Returns `None` if…",5,[[["cursor"]],["result",["option"]]]],[11,"len","","Get the size of the header formatted with given payload…",5,[[["self"],["u64"]],["usize"]]],[11,"format","","Format a header for given payload size.",5,N],[11,"len","","Get the length of the frame. This is the length of the…",10,[[["self"]],["usize"]]],[11,"header","","Get a reference to the frame's header.",10,[[["self"]],["frameheader"]]],[11,"header_mut","","Get a mutable reference to the frame's header.",10,[[["self"]],["frameheader"]]],[11,"payload","","Get a reference to the frame's payload.",10,[[["self"]],["vec"]]],[11,"payload_mut","","Get a mutable reference to the frame's payload.",10,[[["self"]],["vec"]]],[11,"into_data","","Consume the frame into its payload as binary.",10,[[["self"]],["vec",["u8"]]]],[11,"into_string","","Consume the frame into its payload as string.",10,[[["self"]],["stdresult",["string","fromutf8error"]]]],[11,"message","","Create a new data frame.",10,[[["vec",["u8"]],["opcode"],["bool"]],["frame"]]],[11,"pong","","Create a new Pong control frame.",10,[[["vec",["u8"]]],["frame"]]],[11,"ping","","Create a new Ping control frame.",10,[[["vec",["u8"]]],["frame"]]],[11,"close","","Create a new Close control frame.",10,[[["option",["closeframe"]]],["frame"]]],[11,"from_payload","","Create a frame from given header and data.",10,[[["frameheader"],["vec",["u8"]]],["self"]]],[11,"format","","Write a frame out to a buffer",10,N],[11,"new","","Create a new frame socket.",11,[[["stream"]],["self"]]],[11,"from_partially_read","","Create a new frame socket from partially read data.",11,[[["stream"],["vec",["u8"]]],["self"]]],[11,"into_inner","","Extract a stream from the socket.",11,N],[11,"get_ref","","Returns a shared reference to the inner stream.",11,[[["self"]],["stream"]]],[11,"get_mut","","Returns a mutable reference to the inner stream.",11,[[["self"]],["stream"]]],[11,"read_frame","","Read a frame from stream.",11,[[["self"],["option",["usize"]]],["result",["option"]]]],[11,"write_frame","","Write a frame to stream.",11,[[["self"],["frame"]],["result"]]],[11,"write_pending","","Complete pending write, if any.",11,[[["self"]],["result"]]],[11,"text","tungstenite","Create a new text WebSocket message from a stringable.",0,[[["s"]],["message"]]],[11,"binary","","Create a new binary WebSocket message by converting to Vec.",0,[[["b"]],["message"]]],[11,"is_text","","Indicates whether a message is a text message.",0,[[["self"]],["bool"]]],[11,"is_binary","","Indicates whether a message is a binary message.",0,[[["self"]],["bool"]]],[11,"is_ping","","Indicates whether a message is a ping message.",0,[[["self"]],["bool"]]],[11,"is_pong","","Indicates whether a message is a pong message.",0,[[["self"]],["bool"]]],[11,"len","","Get the length of the WebSocket message.",0,[[["self"]],["usize"]]],[11,"is_empty","","Returns true if the WebSocket message has no content. For…",0,[[["self"]],["bool"]]],[11,"into_data","","Consume the WebSocket and return it as binary data.",0,[[["self"]],["vec",["u8"]]]],[11,"into_text","","Attempt to consume the WebSocket message and convert it to…",0,[[["self"]],["result",["string"]]]],[11,"to_text","","Attempt to get a &str from the WebSocket message, this…",0,[[["self"]],["result",["str"]]]],[11,"from_raw_socket","tungstenite::protocol","Convert a raw socket into a WebSocket without performing a…",12,[[["stream"],["role"],["option",["websocketconfig"]]],["self"]]],[11,"from_partially_read","","Convert a raw socket into a WebSocket without performing a…",12,[[["stream"],["vec",["u8"]],["role"],["option",["websocketconfig"]]],["self"]]],[11,"get_ref","","Returns a shared reference to the inner stream.",12,[[["self"]],["stream"]]],[11,"get_mut","","Returns a mutable reference to the inner stream.",12,[[["self"]],["stream"]]],[11,"set_config","","Change the configuration.",12,N],[11,"read_message","","Read a message from stream, if possible.",12,[[["self"]],["result",["message"]]]],[11,"write_message","","Send a message to stream, if possible.",12,[[["self"],["message"]],["result"]]],[11,"close","","Close the connection.",12,[[["self"],["option",["closeframe"]]],["result"]]],[11,"write_pending","","Flush the pending send queue.",12,[[["self"]],["result"]]],[0,"client","tungstenite","Methods to connect to an WebSocket as a client.",N,N],[5,"connect_with_config","tungstenite::client","Connect to the given WebSocket in blocking mode.",N,[[["req"],["option",["websocketconfig"]]],["result"]]],[5,"connect","","Connect to the given WebSocket in blocking mode.",N,[[["req"]],["result"]]],[5,"url_mode","","Get the mode of the given URL.",N,[[["url"]],["result",["mode"]]]],[5,"client_with_config","","Do the client handshake over the given stream given a web…",N,[[["req"],["stream"],["option",["websocketconfig"]]],["stdresult",["handshakeerror"]]]],[5,"client","","Do the client handshake over the given stream.",N,[[["req"],["stream"]],["stdresult",["handshakeerror"]]]],[6,"AutoStream","","TLS support is nod compiled in, this is just standard…",N,N],[0,"server","tungstenite","Methods to accept an incoming WebSocket connection on a…",N,N],[5,"accept_with_config","tungstenite::server","Accept the given Stream as a WebSocket.",N,[[["s"],["option",["websocketconfig"]]],["result",["websocket","handshakeerror"]]]],[5,"accept","","Accept the given Stream as a WebSocket.",N,[[["s"]],["result",["websocket","handshakeerror"]]]],[5,"accept_hdr_with_config","","Accept the given Stream as a WebSocket.",N,[[["s"],["c"],["option",["websocketconfig"]]],["result",["websocket","handshakeerror"]]]],[5,"accept_hdr","","Accept the given Stream as a WebSocket.",N,[[["s"],["c"]],["result",["websocket","handshakeerror"]]]],[0,"handshake","tungstenite","WebSocket handshake control.",N,N],[3,"MidHandshake","tungstenite::handshake","A WebSocket handshake.",N,N],[4,"HandshakeError","","A handshake result.",N,N],[13,"Interrupted","","Handshake was interrupted (would block).",13,N],[13,"Failure","","Handshake failed.",13,N],[0,"headers","","HTTP Request and response header handling.",N,N],[3,"Headers","tungstenite::handshake::headers","HTTP request or response headers.",N,N],[3,"HeadersIter","","The iterator over headers.",N,N],[17,"MAX_HEADERS","","Limit for the number of header lines.",N,N],[8,"FromHttparse","","Trait to convert raw objects into HTTP parseables.",N,N],[10,"from_httparse","","Convert raw object into parsed HTTP headers.",14,[[["t"]],["result"]]],[11,"find_first","","Get first header with the given name, if any.",15,[[["self"],["str"]],["option"]]],[11,"find","","Iterate over all headers with the given name.",15,[[["self"],["str"]],["headersiter"]]],[11,"header_is","","Check if the given header has the given value.",15,[[["self"],["str"],["str"]],["bool"]]],[11,"header_is_ignore_case","","Check if the given header has the given value…",15,[[["self"],["str"],["str"]],["bool"]]],[11,"iter","","Allows to iterate over available headers.",15,[[["self"]],["iter"]]],[0,"client","tungstenite::handshake","Client handshake machine.",N,N],[3,"Request","tungstenite::handshake::client","Client request.",N,N],[12,"url","","`ws://` or `wss://` URL to connect to.",16,N],[12,"extra_headers","","Extra HTTP headers to append to the request.",16,N],[3,"ClientHandshake","","Client handshake role.",N,N],[3,"Response","","Server response.",N,N],[12,"code","","HTTP response code of the response.",17,N],[12,"headers","","Received headers.",17,N],[11,"add_protocol","","Adds a WebSocket protocol to the request.",16,[[["self"],["cow",["str"]]]]],[11,"add_header","","Adds a custom header to the request.",16,[[["self"],["cow",["str"]],["cow",["str"]]]]],[11,"start","","Initiate a client handshake.",18,[[["s"],["request"],["option",["websocketconfig"]]],["midhandshake"]]],[0,"server","tungstenite::handshake","Server handshake machine.",N,N],[3,"Request","tungstenite::handshake::server","Request from the client.",N,N],[12,"path","","Path part of the URL.",19,N],[12,"headers","","HTTP headers.",19,N],[3,"NoCallback","","Stub for callback that does nothing.",N,N],[3,"ServerHandshake","","Server handshake role.",N,N],[8,"Callback","","The callback trait.",N,N],[10,"on_request","","Called whenever the server read the request from the…",20,[[["self"],["request"]],["result",["option"]]]],[11,"reply","","Reply to the response.",19,[[["self"],["option",["vec"]]],["result",["vec"]]]],[11,"start","","Start server handshake. `callback` specifies a custom…",21,[[["s"],["c"],["option",["websocketconfig"]]],["midhandshake"]]],[8,"HandshakeRole","tungstenite::handshake","Handshake role.",N,N],[11,"handshake","","Restarts the handshake process.",22,[[["self"]],["result",["handshakeerror"]]]],[0,"stream","tungstenite","Convenience wrapper for streams to switch between plain…",N,N],[4,"Mode","tungstenite::stream","Stream mode, either plain TCP or TLS.",N,N],[13,"Plain","","Plain mode (`ws://` URL).",23,N],[13,"Tls","","TLS mode (`wss://` URL).",23,N],[4,"Stream","","Stream, either plain TCP or TLS.",N,N],[13,"Plain","","Unencrypted socket stream.",24,N],[13,"Tls","","Encrypted socket stream.",24,N],[8,"NoDelay","","Trait to switch TCP_NODELAY.",N,N],[10,"set_nodelay","","Set the TCP_NODELAY option to the given value.",25,[[["self"],["bool"]],["ioresult"]]],[0,"util","tungstenite","Helper traits to ease non-blocking handling.",N,N],[8,"NonBlockingError","tungstenite::util","Non-blocking IO handling.",N,N],[10,"into_non_blocking","","Convert WouldBlock to None and don't touch other errors.",26,[[["self"]],["option"]]],[8,"NonBlockingResult","","Non-blocking IO wrapper.",N,N],[16,"Result","","Type of the converted result: `Result<Option<T>, E>`",27,N],[10,"no_block","","Perform the non-block conversion.",27,N],[11,"to_string","tungstenite","",0,[[["self"]],["string"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"to_string","tungstenite::error","",1,[[["self"]],["string"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"to_string","tungstenite::protocol","",2,[[["self"]],["string"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,N],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,N],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"into","","",12,[[["self"]],["u"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"try_into","","",12,[[["self"]],["result"]]],[11,"get_type_id","","",12,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,N],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"to_string","tungstenite::protocol::frame","",10,[[["self"]],["string"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[["self"]],["u"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,N],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"try_into","","",10,[[["self"]],["result"]]],[11,"get_type_id","","",10,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,N],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[["self"]],["u"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"try_into","","",11,[[["self"]],["result"]]],[11,"get_type_id","","",11,[[["self"]],["typeid"]]],[11,"to_string","tungstenite::protocol::frame::coding","",6,[[["self"]],["string"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,N],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"to_string","","",7,[[["self"]],["string"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[["self"]],["u"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,N],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"to_string","","",8,[[["self"]],["string"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[["self"]],["u"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,N],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"try_into","","",8,[[["self"]],["result"]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"to_string","","",9,[[["self"]],["string"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[["self"]],["u"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,N],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"try_into","","",9,[[["self"]],["result"]]],[11,"get_type_id","","",9,[[["self"]],["typeid"]]],[11,"from","tungstenite::handshake","",22,[[["t"]],["t"]]],[11,"into","","",22,[[["self"]],["u"]]],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"try_into","","",22,[[["self"]],["result"]]],[11,"get_type_id","","",22,[[["self"]],["typeid"]]],[11,"to_string","","",13,[[["self"]],["string"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"into","","",13,[[["self"]],["u"]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"try_into","","",13,[[["self"]],["result"]]],[11,"get_type_id","","",13,[[["self"]],["typeid"]]],[11,"from","tungstenite::handshake::headers","",15,[[["t"]],["t"]]],[11,"into","","",15,[[["self"]],["u"]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"try_into","","",15,[[["self"]],["result"]]],[11,"get_type_id","","",15,[[["self"]],["typeid"]]],[11,"into_iter","","",28,[[["self"]],["i"]]],[11,"from","","",28,[[["t"]],["t"]]],[11,"into","","",28,[[["self"]],["u"]]],[11,"try_from","","",28,[[["u"]],["result"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"try_into","","",28,[[["self"]],["result"]]],[11,"get_type_id","","",28,[[["self"]],["typeid"]]],[11,"from","tungstenite::handshake::client","",16,[[["t"]],["t"]]],[11,"into","","",16,[[["self"]],["u"]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"try_into","","",16,[[["self"]],["result"]]],[11,"get_type_id","","",16,[[["self"]],["typeid"]]],[11,"from","","",18,[[["t"]],["t"]]],[11,"into","","",18,[[["self"]],["u"]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"try_into","","",18,[[["self"]],["result"]]],[11,"get_type_id","","",18,[[["self"]],["typeid"]]],[11,"from","","",17,[[["t"]],["t"]]],[11,"into","","",17,[[["self"]],["u"]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"try_into","","",17,[[["self"]],["result"]]],[11,"get_type_id","","",17,[[["self"]],["typeid"]]],[11,"from","tungstenite::handshake::server","",19,[[["t"]],["t"]]],[11,"into","","",19,[[["self"]],["u"]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"try_into","","",19,[[["self"]],["result"]]],[11,"get_type_id","","",19,[[["self"]],["typeid"]]],[11,"on_request","","",29,[[["self"],["request"]],["result",["option","error"]]]],[11,"from","","",29,[[["t"]],["t"]]],[11,"into","","",29,[[["self"]],["u"]]],[11,"to_owned","","",29,[[["self"]],["t"]]],[11,"clone_into","","",29,N],[11,"try_from","","",29,[[["u"]],["result"]]],[11,"borrow","","",29,[[["self"]],["t"]]],[11,"borrow_mut","","",29,[[["self"]],["t"]]],[11,"try_into","","",29,[[["self"]],["result"]]],[11,"get_type_id","","",29,[[["self"]],["typeid"]]],[11,"from","","",21,[[["t"]],["t"]]],[11,"into","","",21,[[["self"]],["u"]]],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"try_into","","",21,[[["self"]],["result"]]],[11,"get_type_id","","",21,[[["self"]],["typeid"]]],[11,"from","tungstenite::stream","",23,[[["t"]],["t"]]],[11,"into","","",23,[[["self"]],["u"]]],[11,"to_owned","","",23,[[["self"]],["t"]]],[11,"clone_into","","",23,N],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"try_into","","",23,[[["self"]],["result"]]],[11,"get_type_id","","",23,[[["self"]],["typeid"]]],[11,"from","","",24,[[["t"]],["t"]]],[11,"into","","",24,[[["self"]],["u"]]],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"try_into","","",24,[[["self"]],["result"]]],[11,"get_type_id","","",24,[[["self"]],["typeid"]]],[11,"from_httparse","tungstenite::handshake::headers","",15,N],[11,"from_httparse","tungstenite::handshake::client","",17,[[["response"]],["result"]]],[11,"from_httparse","tungstenite::handshake::server","",19,[[["request"]],["result"]]],[11,"on_request","","",29,[[["self"],["request"]],["result",["option"]]]],[11,"stage_finished","tungstenite::handshake::client","",18,[[["self"],["stageresult"]],["result",["processingresult"]]]],[11,"stage_finished","tungstenite::handshake::server","",21,[[["self"],["stageresult"]],["result",["processingresult"]]]],[11,"set_nodelay","tungstenite::stream","",24,[[["self"],["bool"]],["ioresult"]]],[11,"into_non_blocking","tungstenite::error","",1,[[["self"]],["option"]]],[11,"next","tungstenite::handshake::headers","",28,[[["self"]],["option"]]],[11,"eq","tungstenite::protocol::frame::coding","",6,[[["self"],["opcode"]],["bool"]]],[11,"ne","","",6,[[["self"],["opcode"]],["bool"]]],[11,"eq","","",7,[[["self"],["data"]],["bool"]]],[11,"ne","","",7,[[["self"],["data"]],["bool"]]],[11,"eq","","",8,[[["self"],["control"]],["bool"]]],[11,"ne","","",8,[[["self"],["control"]],["bool"]]],[11,"eq","","",9,[[["self"],["closecode"]],["bool"]]],[11,"ne","","",9,[[["self"],["closecode"]],["bool"]]],[11,"eq","tungstenite","",0,[[["self"],["message"]],["bool"]]],[11,"ne","","",0,[[["self"],["message"]],["bool"]]],[11,"default","tungstenite::protocol::frame","",5,[[],["self"]]],[11,"default","tungstenite::protocol","",3,[[],["self"]]],[11,"clone","tungstenite::protocol::frame::coding","",6,[[["self"]],["opcode"]]],[11,"clone","","",7,[[["self"]],["data"]]],[11,"clone","","",8,[[["self"]],["control"]]],[11,"clone","","",9,[[["self"]],["closecode"]]],[11,"clone","tungstenite::protocol","",2,[[["self"]],["closeframe"]]],[11,"clone","tungstenite::protocol::frame","",5,[[["self"]],["frameheader"]]],[11,"clone","","",10,[[["self"]],["frame"]]],[11,"clone","tungstenite","",0,[[["self"]],["message"]]],[11,"clone","tungstenite::protocol","",4,[[["self"]],["role"]]],[11,"clone","","",3,[[["self"]],["websocketconfig"]]],[11,"clone","tungstenite::handshake::server","",29,[[["self"]],["nocallback"]]],[11,"clone","tungstenite::stream","",23,[[["self"]],["mode"]]],[11,"from","tungstenite::error","",1,[[["error"]],["self"]]],[11,"from","","",1,[[["utf8error"]],["self"]]],[11,"from","","",1,[[["fromutf8error"]],["self"]]],[11,"from","","",1,[[["error"]],["self"]]],[11,"from","tungstenite::protocol::frame::coding","",6,[[["u8"]],["opcode"]]],[11,"from","","",9,[[["u16"]],["closecode"]]],[11,"from","tungstenite","",0,[[["string"]],["message"]]],[11,"from","","",0,[[["str"]],["message"]]],[11,"from","","",0,N],[11,"from","","",0,[[["vec",["u8"]]],["message"]]],[11,"from","tungstenite::handshake::client","",16,[[["url"]],["self"]]],[11,"from","tungstenite::handshake","",13,[[["error"]],["self"]]],[11,"into","tungstenite::protocol::frame::coding","",6,[[["self"]],["u8"]]],[11,"into","","",9,[[["self"]],["u16"]]],[11,"into","tungstenite","",0,[[["self"]],["vec",["u8"]]]],[11,"fmt","tungstenite::error","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","tungstenite::protocol::frame::coding","",6,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",7,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",8,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",9,[[["self"],["formatter"]],["result"]]],[11,"fmt","tungstenite::protocol","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","tungstenite::protocol::frame","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",10,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",11,[[["self"],["formatter"]],["result"]]],[11,"fmt","tungstenite","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","tungstenite::protocol","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",12,[[["self"],["formatter"]],["result"]]],[11,"fmt","tungstenite::handshake::headers","",15,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",28,[[["self"],["formatter"]],["result"]]],[11,"fmt","tungstenite::handshake::client","",16,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",18,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",17,[[["self"],["formatter"]],["result"]]],[11,"fmt","tungstenite::handshake::server","",19,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",29,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",21,[[["self"],["formatter"]],["result"]]],[11,"fmt","tungstenite::handshake","",22,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",13,[[["self"],["formatter"]],["result"]]],[11,"fmt","tungstenite::stream","",23,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",24,[[["self"],["formatter"]],["result"]]],[11,"fmt","tungstenite::error","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","tungstenite::protocol::frame::coding","",7,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",8,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",6,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",9,[[["self"],["formatter"]],["result"]]],[11,"fmt","tungstenite::protocol","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","tungstenite::protocol::frame","",10,[[["self"],["formatter"]],["result"]]],[11,"fmt","tungstenite","",0,[[["self"],["formatter"]],["stdresult",["error"]]]],[11,"fmt","tungstenite::handshake","",13,[[["self"],["formatter"]],["result"]]],[11,"read","tungstenite::stream","",24,N],[11,"write","","",24,N],[11,"flush","","",24,[[["self"]],["ioresult"]]],[11,"description","tungstenite::error","",1,[[["self"]],["str"]]],[11,"description","tungstenite::handshake","",13,[[["self"]],["str"]]]],"paths":[[4,"Message"],[4,"Error"],[3,"CloseFrame"],[3,"WebSocketConfig"],[4,"Role"],[3,"FrameHeader"],[4,"OpCode"],[4,"Data"],[4,"Control"],[4,"CloseCode"],[3,"Frame"],[3,"FrameSocket"],[3,"WebSocket"],[4,"HandshakeError"],[8,"FromHttparse"],[3,"Headers"],[3,"Request"],[3,"Response"],[3,"ClientHandshake"],[3,"Request"],[8,"Callback"],[3,"ServerHandshake"],[3,"MidHandshake"],[4,"Mode"],[4,"Stream"],[8,"NoDelay"],[8,"NonBlockingError"],[8,"NonBlockingResult"],[3,"HeadersIter"],[3,"NoCallback"]]};
initSearch(searchIndex);addSearchOptions(searchIndex);
